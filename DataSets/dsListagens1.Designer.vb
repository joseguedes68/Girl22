'------------------------------------------------------------------------------
' <auto-generated>
'     Este código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações a este ficheiro poderão provocar um comportamento incorrecto e perder-se-ão se
'     o código for regenerado.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsListagens"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsListagens
    Inherits Global.System.Data.DataSet
    
    Private tabledtListaFichas As dtListaFichasDataTable
    
    Private tabledtDocPos As dtDocPosDataTable
    
    Private tableClientesLoja As ClientesLojaDataTable
    
    Private tabledtMapaVendas As dtMapaVendasDataTable
    
    Private tabledtVndDetalhe As dtVndDetalheDataTable
    
    Private tabledtAcessorios As dtAcessoriosDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dtListaFichas")) Is Nothing) Then
                MyBase.Tables.Add(New dtListaFichasDataTable(ds.Tables("dtListaFichas")))
            End If
            If (Not (ds.Tables("dtDocPos")) Is Nothing) Then
                MyBase.Tables.Add(New dtDocPosDataTable(ds.Tables("dtDocPos")))
            End If
            If (Not (ds.Tables("ClientesLoja")) Is Nothing) Then
                MyBase.Tables.Add(New ClientesLojaDataTable(ds.Tables("ClientesLoja")))
            End If
            If (Not (ds.Tables("dtMapaVendas")) Is Nothing) Then
                MyBase.Tables.Add(New dtMapaVendasDataTable(ds.Tables("dtMapaVendas")))
            End If
            If (Not (ds.Tables("dtVndDetalhe")) Is Nothing) Then
                MyBase.Tables.Add(New dtVndDetalheDataTable(ds.Tables("dtVndDetalhe")))
            End If
            If (Not (ds.Tables("dtAcessorios")) Is Nothing) Then
                MyBase.Tables.Add(New dtAcessoriosDataTable(ds.Tables("dtAcessorios")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtListaFichas() As dtListaFichasDataTable
        Get
            Return Me.tabledtListaFichas
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtDocPos() As dtDocPosDataTable
        Get
            Return Me.tabledtDocPos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ClientesLoja() As ClientesLojaDataTable
        Get
            Return Me.tableClientesLoja
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtMapaVendas() As dtMapaVendasDataTable
        Get
            Return Me.tabledtMapaVendas
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtVndDetalhe() As dtVndDetalheDataTable
        Get
            Return Me.tabledtVndDetalhe
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtAcessorios() As dtAcessoriosDataTable
        Get
            Return Me.tabledtAcessorios
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsListagens = CType(MyBase.Clone,dsListagens)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("dtListaFichas")) Is Nothing) Then
                MyBase.Tables.Add(New dtListaFichasDataTable(ds.Tables("dtListaFichas")))
            End If
            If (Not (ds.Tables("dtDocPos")) Is Nothing) Then
                MyBase.Tables.Add(New dtDocPosDataTable(ds.Tables("dtDocPos")))
            End If
            If (Not (ds.Tables("ClientesLoja")) Is Nothing) Then
                MyBase.Tables.Add(New ClientesLojaDataTable(ds.Tables("ClientesLoja")))
            End If
            If (Not (ds.Tables("dtMapaVendas")) Is Nothing) Then
                MyBase.Tables.Add(New dtMapaVendasDataTable(ds.Tables("dtMapaVendas")))
            End If
            If (Not (ds.Tables("dtVndDetalhe")) Is Nothing) Then
                MyBase.Tables.Add(New dtVndDetalheDataTable(ds.Tables("dtVndDetalhe")))
            End If
            If (Not (ds.Tables("dtAcessorios")) Is Nothing) Then
                MyBase.Tables.Add(New dtAcessoriosDataTable(ds.Tables("dtAcessorios")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledtListaFichas = CType(MyBase.Tables("dtListaFichas"),dtListaFichasDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtListaFichas) Is Nothing) Then
                Me.tabledtListaFichas.InitVars
            End If
        End If
        Me.tabledtDocPos = CType(MyBase.Tables("dtDocPos"),dtDocPosDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtDocPos) Is Nothing) Then
                Me.tabledtDocPos.InitVars
            End If
        End If
        Me.tableClientesLoja = CType(MyBase.Tables("ClientesLoja"),ClientesLojaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableClientesLoja) Is Nothing) Then
                Me.tableClientesLoja.InitVars
            End If
        End If
        Me.tabledtMapaVendas = CType(MyBase.Tables("dtMapaVendas"),dtMapaVendasDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtMapaVendas) Is Nothing) Then
                Me.tabledtMapaVendas.InitVars
            End If
        End If
        Me.tabledtVndDetalhe = CType(MyBase.Tables("dtVndDetalhe"),dtVndDetalheDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtVndDetalhe) Is Nothing) Then
                Me.tabledtVndDetalhe.InitVars
            End If
        End If
        Me.tabledtAcessorios = CType(MyBase.Tables("dtAcessorios"),dtAcessoriosDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtAcessorios) Is Nothing) Then
                Me.tabledtAcessorios.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsListagens"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsListagens.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledtListaFichas = New dtListaFichasDataTable()
        MyBase.Tables.Add(Me.tabledtListaFichas)
        Me.tabledtDocPos = New dtDocPosDataTable()
        MyBase.Tables.Add(Me.tabledtDocPos)
        Me.tableClientesLoja = New ClientesLojaDataTable()
        MyBase.Tables.Add(Me.tableClientesLoja)
        Me.tabledtMapaVendas = New dtMapaVendasDataTable()
        MyBase.Tables.Add(Me.tabledtMapaVendas)
        Me.tabledtVndDetalhe = New dtVndDetalheDataTable()
        MyBase.Tables.Add(Me.tabledtVndDetalhe)
        Me.tabledtAcessorios = New dtAcessoriosDataTable()
        MyBase.Tables.Add(Me.tabledtAcessorios)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializedtListaFichas() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializedtDocPos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeClientesLoja() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializedtMapaVendas() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializedtVndDetalhe() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializedtAcessorios() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsListagens = New dsListagens()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub dtListaFichasRowChangeEventHandler(ByVal sender As Object, ByVal e As dtListaFichasRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub dtDocPosRowChangeEventHandler(ByVal sender As Object, ByVal e As dtDocPosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub ClientesLojaRowChangeEventHandler(ByVal sender As Object, ByVal e As ClientesLojaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub dtMapaVendasRowChangeEventHandler(ByVal sender As Object, ByVal e As dtMapaVendasRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub dtVndDetalheRowChangeEventHandler(ByVal sender As Object, ByVal e As dtVndDetalheRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub dtAcessoriosRowChangeEventHandler(ByVal sender As Object, ByVal e As dtAcessoriosRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtListaFichasDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtListaFichasRow)
        
        Private columnSerieID As Global.System.Data.DataColumn
        
        Private columnModeloID As Global.System.Data.DataColumn
        
        Private columnCorID As Global.System.Data.DataColumn
        
        Private columnTamID As Global.System.Data.DataColumn
        
        Private columnModCorDescr As Global.System.Data.DataColumn
        
        Private columnPrecoEtiqueta As Global.System.Data.DataColumn
        
        Private columnDescrLinha As Global.System.Data.DataColumn
        
        Private columnObs As Global.System.Data.DataColumn
        
        Private columnFoto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtListaFichas"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SerieIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerieID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModeloIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModeloID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TamIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTamID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModCorDescrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModCorDescr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PrecoEtiquetaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecoEtiqueta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DescrLinhaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescrLinha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ObsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FotoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFoto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtListaFichasRow
            Get
                Return CType(Me.Rows(index),dtListaFichasRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtListaFichasRowChanging As dtListaFichasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtListaFichasRowChanged As dtListaFichasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtListaFichasRowDeleting As dtListaFichasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtListaFichasRowDeleted As dtListaFichasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AdddtListaFichasRow(ByVal row As dtListaFichasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AdddtListaFichasRow(ByVal SerieID As String, ByVal ModeloID As String, ByVal CorID As String, ByVal TamID As String, ByVal ModCorDescr As String, ByVal PrecoEtiqueta As Decimal, ByVal DescrLinha As String, ByVal Obs As String, ByVal Foto As String) As dtListaFichasRow
            Dim rowdtListaFichasRow As dtListaFichasRow = CType(Me.NewRow,dtListaFichasRow)
            Dim columnValuesArray() As Object = New Object() {SerieID, ModeloID, CorID, TamID, ModCorDescr, PrecoEtiqueta, DescrLinha, Obs, Foto}
            rowdtListaFichasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtListaFichasRow)
            Return rowdtListaFichasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindBySerieID(ByVal SerieID As String) As dtListaFichasRow
            Return CType(Me.Rows.Find(New Object() {SerieID}),dtListaFichasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtListaFichasDataTable = CType(MyBase.Clone,dtListaFichasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtListaFichasDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSerieID = MyBase.Columns("SerieID")
            Me.columnModeloID = MyBase.Columns("ModeloID")
            Me.columnCorID = MyBase.Columns("CorID")
            Me.columnTamID = MyBase.Columns("TamID")
            Me.columnModCorDescr = MyBase.Columns("ModCorDescr")
            Me.columnPrecoEtiqueta = MyBase.Columns("PrecoEtiqueta")
            Me.columnDescrLinha = MyBase.Columns("DescrLinha")
            Me.columnObs = MyBase.Columns("Obs")
            Me.columnFoto = MyBase.Columns("Foto")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSerieID = New Global.System.Data.DataColumn("SerieID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerieID)
            Me.columnModeloID = New Global.System.Data.DataColumn("ModeloID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModeloID)
            Me.columnCorID = New Global.System.Data.DataColumn("CorID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCorID)
            Me.columnTamID = New Global.System.Data.DataColumn("TamID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTamID)
            Me.columnModCorDescr = New Global.System.Data.DataColumn("ModCorDescr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModCorDescr)
            Me.columnPrecoEtiqueta = New Global.System.Data.DataColumn("PrecoEtiqueta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecoEtiqueta)
            Me.columnDescrLinha = New Global.System.Data.DataColumn("DescrLinha", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescrLinha)
            Me.columnObs = New Global.System.Data.DataColumn("Obs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObs)
            Me.columnFoto = New Global.System.Data.DataColumn("Foto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFoto)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSerieID}, true))
            Me.columnSerieID.AllowDBNull = false
            Me.columnSerieID.Unique = true
            Me.columnSerieID.MaxLength = 25
            Me.columnModeloID.AllowDBNull = false
            Me.columnModeloID.MaxLength = 18
            Me.columnCorID.AllowDBNull = false
            Me.columnCorID.MaxLength = 5
            Me.columnTamID.AllowDBNull = false
            Me.columnTamID.MaxLength = 3
            Me.columnModCorDescr.MaxLength = 50
            Me.columnDescrLinha.MaxLength = 50
            Me.columnObs.MaxLength = 75
            Me.columnFoto.ReadOnly = true
            Me.columnFoto.MaxLength = 41
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewdtListaFichasRow() As dtListaFichasRow
            Return CType(Me.NewRow,dtListaFichasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtListaFichasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtListaFichasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtListaFichasRowChangedEvent) Is Nothing) Then
                RaiseEvent dtListaFichasRowChanged(Me, New dtListaFichasRowChangeEvent(CType(e.Row,dtListaFichasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtListaFichasRowChangingEvent) Is Nothing) Then
                RaiseEvent dtListaFichasRowChanging(Me, New dtListaFichasRowChangeEvent(CType(e.Row,dtListaFichasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtListaFichasRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtListaFichasRowDeleted(Me, New dtListaFichasRowChangeEvent(CType(e.Row,dtListaFichasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtListaFichasRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtListaFichasRowDeleting(Me, New dtListaFichasRowChangeEvent(CType(e.Row,dtListaFichasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovedtListaFichasRow(ByVal row As dtListaFichasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsListagens = New dsListagens()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtListaFichasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtDocPosDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtDocPosRow)
        
        Private columnVia As Global.System.Data.DataColumn
        
        Private columnCodEmp As Global.System.Data.DataColumn
        
        Private columnEmpNome As Global.System.Data.DataColumn
        
        Private columnEmpDesigna As Global.System.Data.DataColumn
        
        Private columnEmpMorada As Global.System.Data.DataColumn
        
        Private columnEmpCodPostal As Global.System.Data.DataColumn
        
        Private columnEmpLocalidade As Global.System.Data.DataColumn
        
        Private columnEmpTelefone As Global.System.Data.DataColumn
        
        Private columnEmpFax As Global.System.Data.DataColumn
        
        Private columnEmpContrib As Global.System.Data.DataColumn
        
        Private columnEmpCapSocial As Global.System.Data.DataColumn
        
        Private columnEmpNrRegisto As Global.System.Data.DataColumn
        
        Private columnEmpLogo As Global.System.Data.DataColumn
        
        Private columnEmpMarca As Global.System.Data.DataColumn
        
        Private columnDocNrSerie As Global.System.Data.DataColumn
        
        Private columnDocNr As Global.System.Data.DataColumn
        
        Private columnDataDoc As Global.System.Data.DataColumn
        
        Private columnObs As Global.System.Data.DataColumn
        
        Private columnDescontoDoc As Global.System.Data.DataColumn
        
        Private columnDocOrig As Global.System.Data.DataColumn
        
        Private columnHash4d As Global.System.Data.DataColumn
        
        Private columnDestCod As Global.System.Data.DataColumn
        
        Private columnDestDescr As Global.System.Data.DataColumn
        
        Private columnDestEndereco As Global.System.Data.DataColumn
        
        Private columnDestCodPostal As Global.System.Data.DataColumn
        
        Private columnDestLocal As Global.System.Data.DataColumn
        
        Private columnDestNIF As Global.System.Data.DataColumn
        
        Private columnModeloID As Global.System.Data.DataColumn
        
        Private columnCorID As Global.System.Data.DataColumn
        
        Private columnUnidade As Global.System.Data.DataColumn
        
        Private columnDescricao As Global.System.Data.DataColumn
        
        Private columnValor As Global.System.Data.DataColumn
        
        Private columnVlrDescLn As Global.System.Data.DataColumn
        
        Private columnLocalCarga As Global.System.Data.DataColumn
        
        Private columnHoraCarga As Global.System.Data.DataColumn
        
        Private columnLocDesc As Global.System.Data.DataColumn
        
        Private columnQtd As Global.System.Data.DataColumn
        
        Private columnVIva As Global.System.Data.DataColumn
        
        Private columnLNome As Global.System.Data.DataColumn
        
        Private columnLMorada As Global.System.Data.DataColumn
        
        Private columnLCodPostal As Global.System.Data.DataColumn
        
        Private columnLLocalidade As Global.System.Data.DataColumn
        
        Private columnLTelefone As Global.System.Data.DataColumn
        
        Private columnLSite As Global.System.Data.DataColumn
        
        Private columnTxIVA As Global.System.Data.DataColumn
        
        Private columnProductCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtDocPos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ViaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CodEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpNomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpDesignaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpDesigna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpMoradaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpMorada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpCodPostalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpCodPostal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpLocalidadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpLocalidade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpTelefoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpTelefone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpFaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpContribColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpContrib
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpCapSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpCapSocial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpNrRegistoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpNrRegisto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpLogoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpLogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpMarcaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpMarca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocNrSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocNrSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DataDocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataDoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ObsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DescontoDocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescontoDoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocOrigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocOrig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Hash4dColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHash4d
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DestCodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestCod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DestDescrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestDescr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DestEnderecoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestEndereco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DestCodPostalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestCodPostal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DestLocalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestLocal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DestNIFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestNIF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ModeloIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModeloID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UnidadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DescricaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescricao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ValorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VlrDescLnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVlrDescLn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LocalCargaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalCarga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HoraCargaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraCarga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LocDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QtdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LNomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LMoradaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLMorada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LCodPostalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCodPostal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LLocalidadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLLocalidade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LTelefoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLTelefone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TxIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTxIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ProductCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtDocPosRow
            Get
                Return CType(Me.Rows(index),dtDocPosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtDocPosRowChanging As dtDocPosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtDocPosRowChanged As dtDocPosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtDocPosRowDeleting As dtDocPosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtDocPosRowDeleted As dtDocPosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AdddtDocPosRow(ByVal row As dtDocPosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AdddtDocPosRow( _
                    ByVal Via As String,  _
                    ByVal CodEmp As String,  _
                    ByVal EmpNome As String,  _
                    ByVal EmpDesigna As String,  _
                    ByVal EmpMorada As String,  _
                    ByVal EmpCodPostal As String,  _
                    ByVal EmpLocalidade As String,  _
                    ByVal EmpTelefone As String,  _
                    ByVal EmpFax As String,  _
                    ByVal EmpContrib As String,  _
                    ByVal EmpCapSocial As String,  _
                    ByVal EmpNrRegisto As String,  _
                    ByVal EmpLogo As String,  _
                    ByVal EmpMarca As String,  _
                    ByVal DocNrSerie As String,  _
                    ByVal DocNr As String,  _
                    ByVal DataDoc As Date,  _
                    ByVal Obs As String,  _
                    ByVal DescontoDoc As Decimal,  _
                    ByVal DocOrig As String,  _
                    ByVal Hash4d As String,  _
                    ByVal DestCod As String,  _
                    ByVal DestDescr As String,  _
                    ByVal DestEndereco As String,  _
                    ByVal DestCodPostal As String,  _
                    ByVal DestLocal As String,  _
                    ByVal DestNIF As String,  _
                    ByVal ModeloID As String,  _
                    ByVal CorID As String,  _
                    ByVal Unidade As String,  _
                    ByVal Descricao As String,  _
                    ByVal Valor As Decimal,  _
                    ByVal VlrDescLn As Decimal,  _
                    ByVal LocalCarga As String,  _
                    ByVal HoraCarga As String,  _
                    ByVal LocDesc As String,  _
                    ByVal Qtd As Decimal,  _
                    ByVal VIva As Decimal,  _
                    ByVal LNome As String,  _
                    ByVal LMorada As String,  _
                    ByVal LCodPostal As String,  _
                    ByVal LLocalidade As String,  _
                    ByVal LTelefone As String,  _
                    ByVal LSite As String,  _
                    ByVal TxIVA As Decimal,  _
                    ByVal ProductCode As String) As dtDocPosRow
            Dim rowdtDocPosRow As dtDocPosRow = CType(Me.NewRow,dtDocPosRow)
            Dim columnValuesArray() As Object = New Object() {Via, CodEmp, EmpNome, EmpDesigna, EmpMorada, EmpCodPostal, EmpLocalidade, EmpTelefone, EmpFax, EmpContrib, EmpCapSocial, EmpNrRegisto, EmpLogo, EmpMarca, DocNrSerie, DocNr, DataDoc, Obs, DescontoDoc, DocOrig, Hash4d, DestCod, DestDescr, DestEndereco, DestCodPostal, DestLocal, DestNIF, ModeloID, CorID, Unidade, Descricao, Valor, VlrDescLn, LocalCarga, HoraCarga, LocDesc, Qtd, VIva, LNome, LMorada, LCodPostal, LLocalidade, LTelefone, LSite, TxIVA, ProductCode}
            rowdtDocPosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtDocPosRow)
            Return rowdtDocPosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtDocPosDataTable = CType(MyBase.Clone,dtDocPosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtDocPosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnVia = MyBase.Columns("Via")
            Me.columnCodEmp = MyBase.Columns("CodEmp")
            Me.columnEmpNome = MyBase.Columns("EmpNome")
            Me.columnEmpDesigna = MyBase.Columns("EmpDesigna")
            Me.columnEmpMorada = MyBase.Columns("EmpMorada")
            Me.columnEmpCodPostal = MyBase.Columns("EmpCodPostal")
            Me.columnEmpLocalidade = MyBase.Columns("EmpLocalidade")
            Me.columnEmpTelefone = MyBase.Columns("EmpTelefone")
            Me.columnEmpFax = MyBase.Columns("EmpFax")
            Me.columnEmpContrib = MyBase.Columns("EmpContrib")
            Me.columnEmpCapSocial = MyBase.Columns("EmpCapSocial")
            Me.columnEmpNrRegisto = MyBase.Columns("EmpNrRegisto")
            Me.columnEmpLogo = MyBase.Columns("EmpLogo")
            Me.columnEmpMarca = MyBase.Columns("EmpMarca")
            Me.columnDocNrSerie = MyBase.Columns("DocNrSerie")
            Me.columnDocNr = MyBase.Columns("DocNr")
            Me.columnDataDoc = MyBase.Columns("DataDoc")
            Me.columnObs = MyBase.Columns("Obs")
            Me.columnDescontoDoc = MyBase.Columns("DescontoDoc")
            Me.columnDocOrig = MyBase.Columns("DocOrig")
            Me.columnHash4d = MyBase.Columns("Hash4d")
            Me.columnDestCod = MyBase.Columns("DestCod")
            Me.columnDestDescr = MyBase.Columns("DestDescr")
            Me.columnDestEndereco = MyBase.Columns("DestEndereco")
            Me.columnDestCodPostal = MyBase.Columns("DestCodPostal")
            Me.columnDestLocal = MyBase.Columns("DestLocal")
            Me.columnDestNIF = MyBase.Columns("DestNIF")
            Me.columnModeloID = MyBase.Columns("ModeloID")
            Me.columnCorID = MyBase.Columns("CorID")
            Me.columnUnidade = MyBase.Columns("Unidade")
            Me.columnDescricao = MyBase.Columns("Descricao")
            Me.columnValor = MyBase.Columns("Valor")
            Me.columnVlrDescLn = MyBase.Columns("VlrDescLn")
            Me.columnLocalCarga = MyBase.Columns("LocalCarga")
            Me.columnHoraCarga = MyBase.Columns("HoraCarga")
            Me.columnLocDesc = MyBase.Columns("LocDesc")
            Me.columnQtd = MyBase.Columns("Qtd")
            Me.columnVIva = MyBase.Columns("VIva")
            Me.columnLNome = MyBase.Columns("LNome")
            Me.columnLMorada = MyBase.Columns("LMorada")
            Me.columnLCodPostal = MyBase.Columns("LCodPostal")
            Me.columnLLocalidade = MyBase.Columns("LLocalidade")
            Me.columnLTelefone = MyBase.Columns("LTelefone")
            Me.columnLSite = MyBase.Columns("LSite")
            Me.columnTxIVA = MyBase.Columns("TxIVA")
            Me.columnProductCode = MyBase.Columns("ProductCode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnVia = New Global.System.Data.DataColumn("Via", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVia)
            Me.columnCodEmp = New Global.System.Data.DataColumn("CodEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodEmp)
            Me.columnEmpNome = New Global.System.Data.DataColumn("EmpNome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpNome)
            Me.columnEmpDesigna = New Global.System.Data.DataColumn("EmpDesigna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpDesigna)
            Me.columnEmpMorada = New Global.System.Data.DataColumn("EmpMorada", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpMorada)
            Me.columnEmpCodPostal = New Global.System.Data.DataColumn("EmpCodPostal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpCodPostal)
            Me.columnEmpLocalidade = New Global.System.Data.DataColumn("EmpLocalidade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpLocalidade)
            Me.columnEmpTelefone = New Global.System.Data.DataColumn("EmpTelefone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpTelefone)
            Me.columnEmpFax = New Global.System.Data.DataColumn("EmpFax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpFax)
            Me.columnEmpContrib = New Global.System.Data.DataColumn("EmpContrib", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpContrib)
            Me.columnEmpCapSocial = New Global.System.Data.DataColumn("EmpCapSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpCapSocial)
            Me.columnEmpNrRegisto = New Global.System.Data.DataColumn("EmpNrRegisto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpNrRegisto)
            Me.columnEmpLogo = New Global.System.Data.DataColumn("EmpLogo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpLogo)
            Me.columnEmpMarca = New Global.System.Data.DataColumn("EmpMarca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpMarca)
            Me.columnDocNrSerie = New Global.System.Data.DataColumn("DocNrSerie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocNrSerie)
            Me.columnDocNr = New Global.System.Data.DataColumn("DocNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocNr)
            Me.columnDataDoc = New Global.System.Data.DataColumn("DataDoc", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataDoc)
            Me.columnObs = New Global.System.Data.DataColumn("Obs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObs)
            Me.columnDescontoDoc = New Global.System.Data.DataColumn("DescontoDoc", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescontoDoc)
            Me.columnDocOrig = New Global.System.Data.DataColumn("DocOrig", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocOrig)
            Me.columnHash4d = New Global.System.Data.DataColumn("Hash4d", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHash4d)
            Me.columnDestCod = New Global.System.Data.DataColumn("DestCod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestCod)
            Me.columnDestDescr = New Global.System.Data.DataColumn("DestDescr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestDescr)
            Me.columnDestEndereco = New Global.System.Data.DataColumn("DestEndereco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestEndereco)
            Me.columnDestCodPostal = New Global.System.Data.DataColumn("DestCodPostal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestCodPostal)
            Me.columnDestLocal = New Global.System.Data.DataColumn("DestLocal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestLocal)
            Me.columnDestNIF = New Global.System.Data.DataColumn("DestNIF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestNIF)
            Me.columnModeloID = New Global.System.Data.DataColumn("ModeloID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModeloID)
            Me.columnCorID = New Global.System.Data.DataColumn("CorID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCorID)
            Me.columnUnidade = New Global.System.Data.DataColumn("Unidade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidade)
            Me.columnDescricao = New Global.System.Data.DataColumn("Descricao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescricao)
            Me.columnValor = New Global.System.Data.DataColumn("Valor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValor)
            Me.columnVlrDescLn = New Global.System.Data.DataColumn("VlrDescLn", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVlrDescLn)
            Me.columnLocalCarga = New Global.System.Data.DataColumn("LocalCarga", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalCarga)
            Me.columnHoraCarga = New Global.System.Data.DataColumn("HoraCarga", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraCarga)
            Me.columnLocDesc = New Global.System.Data.DataColumn("LocDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocDesc)
            Me.columnQtd = New Global.System.Data.DataColumn("Qtd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtd)
            Me.columnVIva = New Global.System.Data.DataColumn("VIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIva)
            Me.columnLNome = New Global.System.Data.DataColumn("LNome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLNome)
            Me.columnLMorada = New Global.System.Data.DataColumn("LMorada", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLMorada)
            Me.columnLCodPostal = New Global.System.Data.DataColumn("LCodPostal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCodPostal)
            Me.columnLLocalidade = New Global.System.Data.DataColumn("LLocalidade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLLocalidade)
            Me.columnLTelefone = New Global.System.Data.DataColumn("LTelefone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLTelefone)
            Me.columnLSite = New Global.System.Data.DataColumn("LSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSite)
            Me.columnTxIVA = New Global.System.Data.DataColumn("TxIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTxIVA)
            Me.columnProductCode = New Global.System.Data.DataColumn("ProductCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCode)
            Me.columnVia.ReadOnly = true
            Me.columnVia.MaxLength = 8
            Me.columnCodEmp.AllowDBNull = false
            Me.columnCodEmp.MaxLength = 4
            Me.columnEmpNome.MaxLength = 50
            Me.columnEmpDesigna.MaxLength = 60
            Me.columnEmpMorada.MaxLength = 100
            Me.columnEmpCodPostal.MaxLength = 20
            Me.columnEmpLocalidade.MaxLength = 50
            Me.columnEmpTelefone.MaxLength = 20
            Me.columnEmpFax.MaxLength = 20
            Me.columnEmpContrib.MaxLength = 50
            Me.columnEmpCapSocial.MaxLength = 50
            Me.columnEmpNrRegisto.MaxLength = 50
            Me.columnEmpLogo.MaxLength = 50
            Me.columnEmpMarca.MaxLength = 50
            Me.columnDocNrSerie.ReadOnly = true
            Me.columnDocNrSerie.MaxLength = 13
            Me.columnDocNr.AllowDBNull = false
            Me.columnDocNr.MaxLength = 10
            Me.columnObs.MaxLength = 300
            Me.columnDescontoDoc.AllowDBNull = false
            Me.columnDocOrig.MaxLength = 50
            Me.columnHash4d.MaxLength = 4
            Me.columnDestCod.MaxLength = 10
            Me.columnDestDescr.MaxLength = 80
            Me.columnDestEndereco.MaxLength = 160
            Me.columnDestCodPostal.MaxLength = 20
            Me.columnDestLocal.MaxLength = 80
            Me.columnDestNIF.MaxLength = 15
            Me.columnModeloID.MaxLength = 18
            Me.columnCorID.MaxLength = 5
            Me.columnUnidade.MaxLength = 10
            Me.columnDescricao.MaxLength = 100
            Me.columnLocalCarga.MaxLength = 255
            Me.columnHoraCarga.MaxLength = 10
            Me.columnLocDesc.MaxLength = 255
            Me.columnQtd.ReadOnly = true
            Me.columnLNome.AllowDBNull = false
            Me.columnLNome.MaxLength = 25
            Me.columnLMorada.MaxLength = 160
            Me.columnLCodPostal.MaxLength = 20
            Me.columnLLocalidade.MaxLength = 80
            Me.columnLTelefone.MaxLength = 20
            Me.columnLSite.MaxLength = 50
            Me.columnProductCode.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewdtDocPosRow() As dtDocPosRow
            Return CType(Me.NewRow,dtDocPosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtDocPosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtDocPosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtDocPosRowChangedEvent) Is Nothing) Then
                RaiseEvent dtDocPosRowChanged(Me, New dtDocPosRowChangeEvent(CType(e.Row,dtDocPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtDocPosRowChangingEvent) Is Nothing) Then
                RaiseEvent dtDocPosRowChanging(Me, New dtDocPosRowChangeEvent(CType(e.Row,dtDocPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtDocPosRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtDocPosRowDeleted(Me, New dtDocPosRowChangeEvent(CType(e.Row,dtDocPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtDocPosRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtDocPosRowDeleting(Me, New dtDocPosRowChangeEvent(CType(e.Row,dtDocPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovedtDocPosRow(ByVal row As dtDocPosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsListagens = New dsListagens()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtDocPosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ClientesLojaDataTable
        Inherits Global.System.Data.TypedTableBase(Of ClientesLojaRow)
        
        Private columnClienteLojaID As Global.System.Data.DataColumn
        
        Private columnNome As Global.System.Data.DataColumn
        
        Private columnMorada As Global.System.Data.DataColumn
        
        Private columnLocalidade As Global.System.Data.DataColumn
        
        Private columnCodPostal As Global.System.Data.DataColumn
        
        Private columnNIF As Global.System.Data.DataColumn
        
        Private columnBI As Global.System.Data.DataColumn
        
        Private columnTelefone As Global.System.Data.DataColumn
        
        Private columnTelemovel As Global.System.Data.DataColumn
        
        Private columnEmail As Global.System.Data.DataColumn
        
        Private columnObs As Global.System.Data.DataColumn
        
        Private columnOperadorID As Global.System.Data.DataColumn
        
        Private columnDtRegisto As Global.System.Data.DataColumn
        
        Private columnPaisID As Global.System.Data.DataColumn
        
        Private columnDistritoID As Global.System.Data.DataColumn
        
        Private columnArmOrig As Global.System.Data.DataColumn
        
        Private columnIDClienteLoja As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ClientesLoja"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ClienteLojaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClienteLojaID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MoradaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMorada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LocalidadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalidade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CodPostalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodPostal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NIFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TelefoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TelemovelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelemovel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ObsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OperadorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperadorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DtRegistoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDtRegisto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PaisIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaisID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DistritoIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistritoID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArmOrigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArmOrig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IDClienteLojaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDClienteLoja
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ClientesLojaRow
            Get
                Return CType(Me.Rows(index),ClientesLojaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ClientesLojaRowChanging As ClientesLojaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ClientesLojaRowChanged As ClientesLojaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ClientesLojaRowDeleting As ClientesLojaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ClientesLojaRowDeleted As ClientesLojaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddClientesLojaRow(ByVal row As ClientesLojaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddClientesLojaRow( _
                    ByVal Nome As String,  _
                    ByVal Morada As String,  _
                    ByVal Localidade As String,  _
                    ByVal CodPostal As String,  _
                    ByVal NIF As String,  _
                    ByVal BI As String,  _
                    ByVal Telefone As String,  _
                    ByVal Telemovel As String,  _
                    ByVal Email As String,  _
                    ByVal Obs As String,  _
                    ByVal OperadorID As String,  _
                    ByVal DtRegisto As Date,  _
                    ByVal PaisID As String,  _
                    ByVal DistritoID As Integer,  _
                    ByVal ArmOrig As String,  _
                    ByVal IDClienteLoja As System.Guid) As ClientesLojaRow
            Dim rowClientesLojaRow As ClientesLojaRow = CType(Me.NewRow,ClientesLojaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nome, Morada, Localidade, CodPostal, NIF, BI, Telefone, Telemovel, Email, Obs, OperadorID, DtRegisto, PaisID, DistritoID, ArmOrig, IDClienteLoja}
            rowClientesLojaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowClientesLojaRow)
            Return rowClientesLojaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByClienteLojaID(ByVal ClienteLojaID As Integer) As ClientesLojaRow
            Return CType(Me.Rows.Find(New Object() {ClienteLojaID}),ClientesLojaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ClientesLojaDataTable = CType(MyBase.Clone,ClientesLojaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ClientesLojaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnClienteLojaID = MyBase.Columns("ClienteLojaID")
            Me.columnNome = MyBase.Columns("Nome")
            Me.columnMorada = MyBase.Columns("Morada")
            Me.columnLocalidade = MyBase.Columns("Localidade")
            Me.columnCodPostal = MyBase.Columns("CodPostal")
            Me.columnNIF = MyBase.Columns("NIF")
            Me.columnBI = MyBase.Columns("BI")
            Me.columnTelefone = MyBase.Columns("Telefone")
            Me.columnTelemovel = MyBase.Columns("Telemovel")
            Me.columnEmail = MyBase.Columns("Email")
            Me.columnObs = MyBase.Columns("Obs")
            Me.columnOperadorID = MyBase.Columns("OperadorID")
            Me.columnDtRegisto = MyBase.Columns("DtRegisto")
            Me.columnPaisID = MyBase.Columns("PaisID")
            Me.columnDistritoID = MyBase.Columns("DistritoID")
            Me.columnArmOrig = MyBase.Columns("ArmOrig")
            Me.columnIDClienteLoja = MyBase.Columns("IDClienteLoja")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnClienteLojaID = New Global.System.Data.DataColumn("ClienteLojaID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClienteLojaID)
            Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNome)
            Me.columnMorada = New Global.System.Data.DataColumn("Morada", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMorada)
            Me.columnLocalidade = New Global.System.Data.DataColumn("Localidade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalidade)
            Me.columnCodPostal = New Global.System.Data.DataColumn("CodPostal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodPostal)
            Me.columnNIF = New Global.System.Data.DataColumn("NIF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIF)
            Me.columnBI = New Global.System.Data.DataColumn("BI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBI)
            Me.columnTelefone = New Global.System.Data.DataColumn("Telefone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefone)
            Me.columnTelemovel = New Global.System.Data.DataColumn("Telemovel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelemovel)
            Me.columnEmail = New Global.System.Data.DataColumn("Email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmail)
            Me.columnObs = New Global.System.Data.DataColumn("Obs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObs)
            Me.columnOperadorID = New Global.System.Data.DataColumn("OperadorID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperadorID)
            Me.columnDtRegisto = New Global.System.Data.DataColumn("DtRegisto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDtRegisto)
            Me.columnPaisID = New Global.System.Data.DataColumn("PaisID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaisID)
            Me.columnDistritoID = New Global.System.Data.DataColumn("DistritoID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistritoID)
            Me.columnArmOrig = New Global.System.Data.DataColumn("ArmOrig", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArmOrig)
            Me.columnIDClienteLoja = New Global.System.Data.DataColumn("IDClienteLoja", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDClienteLoja)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnClienteLojaID}, true))
            Me.columnClienteLojaID.AutoIncrement = true
            Me.columnClienteLojaID.AutoIncrementSeed = -1
            Me.columnClienteLojaID.AutoIncrementStep = -1
            Me.columnClienteLojaID.AllowDBNull = false
            Me.columnClienteLojaID.ReadOnly = true
            Me.columnClienteLojaID.Unique = true
            Me.columnNome.MaxLength = 80
            Me.columnMorada.MaxLength = 160
            Me.columnLocalidade.MaxLength = 20
            Me.columnCodPostal.MaxLength = 8
            Me.columnNIF.MaxLength = 15
            Me.columnBI.MaxLength = 15
            Me.columnTelefone.MaxLength = 20
            Me.columnTelemovel.MaxLength = 20
            Me.columnEmail.MaxLength = 60
            Me.columnObs.MaxLength = 1000
            Me.columnOperadorID.MaxLength = 25
            Me.columnPaisID.AllowDBNull = false
            Me.columnPaisID.MaxLength = 10
            Me.columnDistritoID.AllowDBNull = false
            Me.columnArmOrig.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewClientesLojaRow() As ClientesLojaRow
            Return CType(Me.NewRow,ClientesLojaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ClientesLojaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ClientesLojaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ClientesLojaRowChangedEvent) Is Nothing) Then
                RaiseEvent ClientesLojaRowChanged(Me, New ClientesLojaRowChangeEvent(CType(e.Row,ClientesLojaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ClientesLojaRowChangingEvent) Is Nothing) Then
                RaiseEvent ClientesLojaRowChanging(Me, New ClientesLojaRowChangeEvent(CType(e.Row,ClientesLojaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ClientesLojaRowDeletedEvent) Is Nothing) Then
                RaiseEvent ClientesLojaRowDeleted(Me, New ClientesLojaRowChangeEvent(CType(e.Row,ClientesLojaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ClientesLojaRowDeletingEvent) Is Nothing) Then
                RaiseEvent ClientesLojaRowDeleting(Me, New ClientesLojaRowChangeEvent(CType(e.Row,ClientesLojaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveClientesLojaRow(ByVal row As ClientesLojaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsListagens = New dsListagens()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ClientesLojaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtMapaVendasDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtMapaVendasRow)
        
        Private columnArmazemID As Global.System.Data.DataColumn
        
        Private columnArmAbrev As Global.System.Data.DataColumn
        
        Private columnDeposito As Global.System.Data.DataColumn
        
        Private columnDepSap As Global.System.Data.DataColumn
        
        Private columnCustoSIva As Global.System.Data.DataColumn
        
        Private columnQtdSapatos As Global.System.Data.DataColumn
        
        Private columnQtdMalas As Global.System.Data.DataColumn
        
        Private columnReceberMalas As Global.System.Data.DataColumn
        
        Private columnIvaMalas As Global.System.Data.DataColumn
        
        Private columnVndTotaisCIva As Global.System.Data.DataColumn
        
        Private columnVndSapatosSIva As Global.System.Data.DataColumn
        
        Private columnDepSapatosSIva As Global.System.Data.DataColumn
        
        Private columnVndMalasSIva As Global.System.Data.DataColumn
        
        Private columnValorIvaMalas3020 As Global.System.Data.DataColumn
        
        Private columnDepMalas3020SIva As Global.System.Data.DataColumn
        
        Private columnVndSapatosCIva As Global.System.Data.DataColumn
        
        Private columnVndMalasCIva As Global.System.Data.DataColumn
        
        Private columnDepMalasCIva3020 As Global.System.Data.DataColumn
        
        Private columnDepMalas20CIva As Global.System.Data.DataColumn
        
        Private columnDepMalas30CIva As Global.System.Data.DataColumn
        
        Private columnQtdMalas20 As Global.System.Data.DataColumn
        
        Private columnVndMalas30CIVA As Global.System.Data.DataColumn
        
        Private columnVndMalas20CIVA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtMapaVendas"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArmazemIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArmazemID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArmAbrevColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArmAbrev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepositoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeposito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepSapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepSap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CustoSIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustoSIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QtdSapatosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtdSapatos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QtdMalasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtdMalas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ReceberMalasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceberMalas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IvaMalasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIvaMalas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VndTotaisCIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVndTotaisCIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VndSapatosSIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVndSapatosSIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepSapatosSIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepSapatosSIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VndMalasSIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVndMalasSIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ValorIvaMalas3020Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorIvaMalas3020
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepMalas3020SIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepMalas3020SIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VndSapatosCIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVndSapatosCIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VndMalasCIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVndMalasCIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepMalasCIva3020Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepMalasCIva3020
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepMalas20CIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepMalas20CIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepMalas30CIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepMalas30CIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QtdMalas20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtdMalas20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VndMalas30CIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVndMalas30CIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VndMalas20CIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVndMalas20CIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtMapaVendasRow
            Get
                Return CType(Me.Rows(index),dtMapaVendasRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtMapaVendasRowChanging As dtMapaVendasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtMapaVendasRowChanged As dtMapaVendasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtMapaVendasRowDeleting As dtMapaVendasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtMapaVendasRowDeleted As dtMapaVendasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AdddtMapaVendasRow(ByVal row As dtMapaVendasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AdddtMapaVendasRow( _
                    ByVal ArmazemID As String,  _
                    ByVal ArmAbrev As String,  _
                    ByVal Deposito As Decimal,  _
                    ByVal DepSap As Decimal,  _
                    ByVal CustoSIva As Decimal,  _
                    ByVal QtdSapatos As Decimal,  _
                    ByVal QtdMalas As Decimal,  _
                    ByVal ReceberMalas As Decimal,  _
                    ByVal IvaMalas As Decimal,  _
                    ByVal VndTotaisCIva As Decimal,  _
                    ByVal VndSapatosSIva As Decimal,  _
                    ByVal DepSapatosSIva As Decimal,  _
                    ByVal VndMalasSIva As Decimal,  _
                    ByVal ValorIvaMalas3020 As Decimal,  _
                    ByVal DepMalas3020SIva As Decimal,  _
                    ByVal VndSapatosCIva As Decimal,  _
                    ByVal VndMalasCIva As Decimal,  _
                    ByVal DepMalasCIva3020 As Decimal,  _
                    ByVal DepMalas20CIva As Decimal,  _
                    ByVal DepMalas30CIva As Decimal,  _
                    ByVal QtdMalas20 As Decimal,  _
                    ByVal VndMalas30CIVA As Decimal,  _
                    ByVal VndMalas20CIVA As Decimal) As dtMapaVendasRow
            Dim rowdtMapaVendasRow As dtMapaVendasRow = CType(Me.NewRow,dtMapaVendasRow)
            Dim columnValuesArray() As Object = New Object() {ArmazemID, ArmAbrev, Deposito, DepSap, CustoSIva, QtdSapatos, QtdMalas, ReceberMalas, IvaMalas, VndTotaisCIva, VndSapatosSIva, DepSapatosSIva, VndMalasSIva, ValorIvaMalas3020, DepMalas3020SIva, VndSapatosCIva, VndMalasCIva, DepMalasCIva3020, DepMalas20CIva, DepMalas30CIva, QtdMalas20, VndMalas30CIVA, VndMalas20CIVA}
            rowdtMapaVendasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtMapaVendasRow)
            Return rowdtMapaVendasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtMapaVendasDataTable = CType(MyBase.Clone,dtMapaVendasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtMapaVendasDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnArmazemID = MyBase.Columns("ArmazemID")
            Me.columnArmAbrev = MyBase.Columns("ArmAbrev")
            Me.columnDeposito = MyBase.Columns("Deposito")
            Me.columnDepSap = MyBase.Columns("DepSap")
            Me.columnCustoSIva = MyBase.Columns("CustoSIva")
            Me.columnQtdSapatos = MyBase.Columns("QtdSapatos")
            Me.columnQtdMalas = MyBase.Columns("QtdMalas")
            Me.columnReceberMalas = MyBase.Columns("ReceberMalas")
            Me.columnIvaMalas = MyBase.Columns("IvaMalas")
            Me.columnVndTotaisCIva = MyBase.Columns("VndTotaisCIva")
            Me.columnVndSapatosSIva = MyBase.Columns("VndSapatosSIva")
            Me.columnDepSapatosSIva = MyBase.Columns("DepSapatosSIva")
            Me.columnVndMalasSIva = MyBase.Columns("VndMalasSIva")
            Me.columnValorIvaMalas3020 = MyBase.Columns("ValorIvaMalas3020")
            Me.columnDepMalas3020SIva = MyBase.Columns("DepMalas3020SIva")
            Me.columnVndSapatosCIva = MyBase.Columns("VndSapatosCIva")
            Me.columnVndMalasCIva = MyBase.Columns("VndMalasCIva")
            Me.columnDepMalasCIva3020 = MyBase.Columns("DepMalasCIva3020")
            Me.columnDepMalas20CIva = MyBase.Columns("DepMalas20CIva")
            Me.columnDepMalas30CIva = MyBase.Columns("DepMalas30CIva")
            Me.columnQtdMalas20 = MyBase.Columns("QtdMalas20")
            Me.columnVndMalas30CIVA = MyBase.Columns("VndMalas30CIVA")
            Me.columnVndMalas20CIVA = MyBase.Columns("VndMalas20CIVA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnArmazemID = New Global.System.Data.DataColumn("ArmazemID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArmazemID)
            Me.columnArmAbrev = New Global.System.Data.DataColumn("ArmAbrev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArmAbrev)
            Me.columnDeposito = New Global.System.Data.DataColumn("Deposito", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeposito)
            Me.columnDepSap = New Global.System.Data.DataColumn("DepSap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepSap)
            Me.columnCustoSIva = New Global.System.Data.DataColumn("CustoSIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustoSIva)
            Me.columnQtdSapatos = New Global.System.Data.DataColumn("QtdSapatos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtdSapatos)
            Me.columnQtdMalas = New Global.System.Data.DataColumn("QtdMalas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtdMalas)
            Me.columnReceberMalas = New Global.System.Data.DataColumn("ReceberMalas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceberMalas)
            Me.columnIvaMalas = New Global.System.Data.DataColumn("IvaMalas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIvaMalas)
            Me.columnVndTotaisCIva = New Global.System.Data.DataColumn("VndTotaisCIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVndTotaisCIva)
            Me.columnVndSapatosSIva = New Global.System.Data.DataColumn("VndSapatosSIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVndSapatosSIva)
            Me.columnDepSapatosSIva = New Global.System.Data.DataColumn("DepSapatosSIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepSapatosSIva)
            Me.columnVndMalasSIva = New Global.System.Data.DataColumn("VndMalasSIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVndMalasSIva)
            Me.columnValorIvaMalas3020 = New Global.System.Data.DataColumn("ValorIvaMalas3020", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorIvaMalas3020)
            Me.columnDepMalas3020SIva = New Global.System.Data.DataColumn("DepMalas3020SIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepMalas3020SIva)
            Me.columnVndSapatosCIva = New Global.System.Data.DataColumn("VndSapatosCIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVndSapatosCIva)
            Me.columnVndMalasCIva = New Global.System.Data.DataColumn("VndMalasCIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVndMalasCIva)
            Me.columnDepMalasCIva3020 = New Global.System.Data.DataColumn("DepMalasCIva3020", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepMalasCIva3020)
            Me.columnDepMalas20CIva = New Global.System.Data.DataColumn("DepMalas20CIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepMalas20CIva)
            Me.columnDepMalas30CIva = New Global.System.Data.DataColumn("DepMalas30CIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepMalas30CIva)
            Me.columnQtdMalas20 = New Global.System.Data.DataColumn("QtdMalas20", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtdMalas20)
            Me.columnVndMalas30CIVA = New Global.System.Data.DataColumn("VndMalas30CIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVndMalas30CIVA)
            Me.columnVndMalas20CIVA = New Global.System.Data.DataColumn("VndMalas20CIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVndMalas20CIVA)
            Me.columnArmazemID.AllowDBNull = false
            Me.columnArmazemID.MaxLength = 4
            Me.columnArmAbrev.MaxLength = 30
            Me.columnDeposito.ReadOnly = true
            Me.columnDepSap.ReadOnly = true
            Me.columnCustoSIva.ReadOnly = true
            Me.columnQtdSapatos.ReadOnly = true
            Me.columnQtdMalas.ReadOnly = true
            Me.columnReceberMalas.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewdtMapaVendasRow() As dtMapaVendasRow
            Return CType(Me.NewRow,dtMapaVendasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtMapaVendasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtMapaVendasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtMapaVendasRowChangedEvent) Is Nothing) Then
                RaiseEvent dtMapaVendasRowChanged(Me, New dtMapaVendasRowChangeEvent(CType(e.Row,dtMapaVendasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtMapaVendasRowChangingEvent) Is Nothing) Then
                RaiseEvent dtMapaVendasRowChanging(Me, New dtMapaVendasRowChangeEvent(CType(e.Row,dtMapaVendasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtMapaVendasRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtMapaVendasRowDeleted(Me, New dtMapaVendasRowChangeEvent(CType(e.Row,dtMapaVendasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtMapaVendasRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtMapaVendasRowDeleting(Me, New dtMapaVendasRowChangeEvent(CType(e.Row,dtMapaVendasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovedtMapaVendasRow(ByVal row As dtMapaVendasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsListagens = New dsListagens()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtMapaVendasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtVndDetalheDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtVndDetalheRow)
        
        Private columnEmpresaID As Global.System.Data.DataColumn
        
        Private columnArmazemID As Global.System.Data.DataColumn
        
        Private columnTipoDocID As Global.System.Data.DataColumn
        
        Private columnNomeEmpresa As Global.System.Data.DataColumn
        
        Private columnMoradaEmpresa As Global.System.Data.DataColumn
        
        Private columnCodigoPostal As Global.System.Data.DataColumn
        
        Private columnEmpContrib As Global.System.Data.DataColumn
        
        Private columnLoja As Global.System.Data.DataColumn
        
        Private columnMorada As Global.System.Data.DataColumn
        
        Private columnLocalidade As Global.System.Data.DataColumn
        
        Private columnNIF As Global.System.Data.DataColumn
        
        Private columnCodPostal As Global.System.Data.DataColumn
        
        Private columnDocNr As Global.System.Data.DataColumn
        
        Private columnDataDoc As Global.System.Data.DataColumn
        
        Private columnFormaPagtoID As Global.System.Data.DataColumn
        
        Private columnLiquido As Global.System.Data.DataColumn
        
        Private columnIVA As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnDesconto As Global.System.Data.DataColumn
        
        Private columnQtdTotal As Global.System.Data.DataColumn
        
        Private columnSinalMovStk As Global.System.Data.DataColumn
        
        Private columnTipoDocDesc As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtVndDetalhe"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpresaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpresaID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ArmazemIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArmazemID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TipoDocIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDocID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NomeEmpresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomeEmpresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MoradaEmpresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMoradaEmpresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CodigoPostalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoPostal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EmpContribColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpContrib
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LojaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoja
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MoradaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMorada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LocalidadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalidade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NIFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CodPostalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodPostal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DataDocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataDoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FormaPagtoIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormaPagtoID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LiquidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLiquido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DescontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesconto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QtdTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtdTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SinalMovStkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSinalMovStk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TipoDocDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDocDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtVndDetalheRow
            Get
                Return CType(Me.Rows(index),dtVndDetalheRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtVndDetalheRowChanging As dtVndDetalheRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtVndDetalheRowChanged As dtVndDetalheRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtVndDetalheRowDeleting As dtVndDetalheRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtVndDetalheRowDeleted As dtVndDetalheRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AdddtVndDetalheRow(ByVal row As dtVndDetalheRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AdddtVndDetalheRow( _
                    ByVal EmpresaID As String,  _
                    ByVal ArmazemID As String,  _
                    ByVal TipoDocID As String,  _
                    ByVal NomeEmpresa As String,  _
                    ByVal MoradaEmpresa As String,  _
                    ByVal CodigoPostal As String,  _
                    ByVal EmpContrib As String,  _
                    ByVal Loja As String,  _
                    ByVal Morada As String,  _
                    ByVal Localidade As String,  _
                    ByVal NIF As String,  _
                    ByVal CodPostal As String,  _
                    ByVal DocNr As String,  _
                    ByVal DataDoc As Date,  _
                    ByVal FormaPagtoID As Decimal,  _
                    ByVal Liquido As Decimal,  _
                    ByVal IVA As Decimal,  _
                    ByVal Total As Decimal,  _
                    ByVal Desconto As Decimal,  _
                    ByVal QtdTotal As Decimal,  _
                    ByVal SinalMovStk As Double,  _
                    ByVal TipoDocDesc As String) As dtVndDetalheRow
            Dim rowdtVndDetalheRow As dtVndDetalheRow = CType(Me.NewRow,dtVndDetalheRow)
            Dim columnValuesArray() As Object = New Object() {EmpresaID, ArmazemID, TipoDocID, NomeEmpresa, MoradaEmpresa, CodigoPostal, EmpContrib, Loja, Morada, Localidade, NIF, CodPostal, DocNr, DataDoc, FormaPagtoID, Liquido, IVA, Total, Desconto, QtdTotal, SinalMovStk, TipoDocDesc}
            rowdtVndDetalheRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtVndDetalheRow)
            Return rowdtVndDetalheRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtVndDetalheDataTable = CType(MyBase.Clone,dtVndDetalheDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtVndDetalheDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEmpresaID = MyBase.Columns("EmpresaID")
            Me.columnArmazemID = MyBase.Columns("ArmazemID")
            Me.columnTipoDocID = MyBase.Columns("TipoDocID")
            Me.columnNomeEmpresa = MyBase.Columns("NomeEmpresa")
            Me.columnMoradaEmpresa = MyBase.Columns("MoradaEmpresa")
            Me.columnCodigoPostal = MyBase.Columns("CodigoPostal")
            Me.columnEmpContrib = MyBase.Columns("EmpContrib")
            Me.columnLoja = MyBase.Columns("Loja")
            Me.columnMorada = MyBase.Columns("Morada")
            Me.columnLocalidade = MyBase.Columns("Localidade")
            Me.columnNIF = MyBase.Columns("NIF")
            Me.columnCodPostal = MyBase.Columns("CodPostal")
            Me.columnDocNr = MyBase.Columns("DocNr")
            Me.columnDataDoc = MyBase.Columns("DataDoc")
            Me.columnFormaPagtoID = MyBase.Columns("FormaPagtoID")
            Me.columnLiquido = MyBase.Columns("Liquido")
            Me.columnIVA = MyBase.Columns("IVA")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnDesconto = MyBase.Columns("Desconto")
            Me.columnQtdTotal = MyBase.Columns("QtdTotal")
            Me.columnSinalMovStk = MyBase.Columns("SinalMovStk")
            Me.columnTipoDocDesc = MyBase.Columns("TipoDocDesc")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEmpresaID = New Global.System.Data.DataColumn("EmpresaID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpresaID)
            Me.columnArmazemID = New Global.System.Data.DataColumn("ArmazemID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArmazemID)
            Me.columnTipoDocID = New Global.System.Data.DataColumn("TipoDocID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDocID)
            Me.columnNomeEmpresa = New Global.System.Data.DataColumn("NomeEmpresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomeEmpresa)
            Me.columnMoradaEmpresa = New Global.System.Data.DataColumn("MoradaEmpresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMoradaEmpresa)
            Me.columnCodigoPostal = New Global.System.Data.DataColumn("CodigoPostal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoPostal)
            Me.columnEmpContrib = New Global.System.Data.DataColumn("EmpContrib", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpContrib)
            Me.columnLoja = New Global.System.Data.DataColumn("Loja", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoja)
            Me.columnMorada = New Global.System.Data.DataColumn("Morada", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMorada)
            Me.columnLocalidade = New Global.System.Data.DataColumn("Localidade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalidade)
            Me.columnNIF = New Global.System.Data.DataColumn("NIF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIF)
            Me.columnCodPostal = New Global.System.Data.DataColumn("CodPostal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodPostal)
            Me.columnDocNr = New Global.System.Data.DataColumn("DocNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocNr)
            Me.columnDataDoc = New Global.System.Data.DataColumn("DataDoc", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataDoc)
            Me.columnFormaPagtoID = New Global.System.Data.DataColumn("FormaPagtoID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormaPagtoID)
            Me.columnLiquido = New Global.System.Data.DataColumn("Liquido", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLiquido)
            Me.columnIVA = New Global.System.Data.DataColumn("IVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnDesconto = New Global.System.Data.DataColumn("Desconto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesconto)
            Me.columnQtdTotal = New Global.System.Data.DataColumn("QtdTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtdTotal)
            Me.columnSinalMovStk = New Global.System.Data.DataColumn("SinalMovStk", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSinalMovStk)
            Me.columnTipoDocDesc = New Global.System.Data.DataColumn("TipoDocDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDocDesc)
            Me.columnEmpresaID.AllowDBNull = false
            Me.columnEmpresaID.MaxLength = 4
            Me.columnArmazemID.AllowDBNull = false
            Me.columnArmazemID.MaxLength = 4
            Me.columnTipoDocID.AllowDBNull = false
            Me.columnTipoDocID.MaxLength = 2
            Me.columnNomeEmpresa.ReadOnly = true
            Me.columnNomeEmpresa.MaxLength = 111
            Me.columnMoradaEmpresa.ReadOnly = true
            Me.columnMoradaEmpresa.MaxLength = 108
            Me.columnCodigoPostal.ReadOnly = true
            Me.columnCodigoPostal.MaxLength = 71
            Me.columnEmpContrib.MaxLength = 50
            Me.columnLoja.MaxLength = 80
            Me.columnMorada.MaxLength = 160
            Me.columnLocalidade.MaxLength = 80
            Me.columnNIF.MaxLength = 15
            Me.columnCodPostal.MaxLength = 20
            Me.columnDocNr.AllowDBNull = false
            Me.columnDocNr.MaxLength = 10
            Me.columnLiquido.ReadOnly = true
            Me.columnIVA.ReadOnly = true
            Me.columnTotal.ReadOnly = true
            Me.columnDesconto.ReadOnly = true
            Me.columnQtdTotal.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewdtVndDetalheRow() As dtVndDetalheRow
            Return CType(Me.NewRow,dtVndDetalheRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtVndDetalheRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtVndDetalheRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtVndDetalheRowChangedEvent) Is Nothing) Then
                RaiseEvent dtVndDetalheRowChanged(Me, New dtVndDetalheRowChangeEvent(CType(e.Row,dtVndDetalheRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtVndDetalheRowChangingEvent) Is Nothing) Then
                RaiseEvent dtVndDetalheRowChanging(Me, New dtVndDetalheRowChangeEvent(CType(e.Row,dtVndDetalheRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtVndDetalheRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtVndDetalheRowDeleted(Me, New dtVndDetalheRowChangeEvent(CType(e.Row,dtVndDetalheRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtVndDetalheRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtVndDetalheRowDeleting(Me, New dtVndDetalheRowChangeEvent(CType(e.Row,dtVndDetalheRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovedtVndDetalheRow(ByVal row As dtVndDetalheRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsListagens = New dsListagens()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtVndDetalheDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtAcessoriosDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtAcessoriosRow)
        
        Private columnLoja As Global.System.Data.DataColumn
        
        Private columnTipoDocID As Global.System.Data.DataColumn
        
        Private columnDocNr As Global.System.Data.DataColumn
        
        Private columnDataDoc As Global.System.Data.DataColumn
        
        Private columnSerieID As Global.System.Data.DataColumn
        
        Private columnValor As Global.System.Data.DataColumn
        
        Private columnQtd As Global.System.Data.DataColumn
        
        Private columnObs As Global.System.Data.DataColumn
        
        Private columnDeposito As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtAcessorios"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LojaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoja
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TipoDocIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDocID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DataDocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataDoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SerieIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerieID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ValorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QtdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ObsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DepositoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeposito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtAcessoriosRow
            Get
                Return CType(Me.Rows(index),dtAcessoriosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtAcessoriosRowChanging As dtAcessoriosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtAcessoriosRowChanged As dtAcessoriosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtAcessoriosRowDeleting As dtAcessoriosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event dtAcessoriosRowDeleted As dtAcessoriosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AdddtAcessoriosRow(ByVal row As dtAcessoriosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AdddtAcessoriosRow(ByVal Loja As String, ByVal TipoDocID As String, ByVal DocNr As String, ByVal DataDoc As Date, ByVal SerieID As String, ByVal Valor As Double, ByVal Qtd As Short, ByVal Obs As String, ByVal Deposito As Double) As dtAcessoriosRow
            Dim rowdtAcessoriosRow As dtAcessoriosRow = CType(Me.NewRow,dtAcessoriosRow)
            Dim columnValuesArray() As Object = New Object() {Loja, TipoDocID, DocNr, DataDoc, SerieID, Valor, Qtd, Obs, Deposito}
            rowdtAcessoriosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtAcessoriosRow)
            Return rowdtAcessoriosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtAcessoriosDataTable = CType(MyBase.Clone,dtAcessoriosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtAcessoriosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLoja = MyBase.Columns("Loja")
            Me.columnTipoDocID = MyBase.Columns("TipoDocID")
            Me.columnDocNr = MyBase.Columns("DocNr")
            Me.columnDataDoc = MyBase.Columns("DataDoc")
            Me.columnSerieID = MyBase.Columns("SerieID")
            Me.columnValor = MyBase.Columns("Valor")
            Me.columnQtd = MyBase.Columns("Qtd")
            Me.columnObs = MyBase.Columns("Obs")
            Me.columnDeposito = MyBase.Columns("Deposito")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLoja = New Global.System.Data.DataColumn("Loja", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoja)
            Me.columnTipoDocID = New Global.System.Data.DataColumn("TipoDocID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDocID)
            Me.columnDocNr = New Global.System.Data.DataColumn("DocNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocNr)
            Me.columnDataDoc = New Global.System.Data.DataColumn("DataDoc", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataDoc)
            Me.columnSerieID = New Global.System.Data.DataColumn("SerieID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerieID)
            Me.columnValor = New Global.System.Data.DataColumn("Valor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValor)
            Me.columnQtd = New Global.System.Data.DataColumn("Qtd", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtd)
            Me.columnObs = New Global.System.Data.DataColumn("Obs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObs)
            Me.columnDeposito = New Global.System.Data.DataColumn("Deposito", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeposito)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewdtAcessoriosRow() As dtAcessoriosRow
            Return CType(Me.NewRow,dtAcessoriosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtAcessoriosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtAcessoriosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtAcessoriosRowChangedEvent) Is Nothing) Then
                RaiseEvent dtAcessoriosRowChanged(Me, New dtAcessoriosRowChangeEvent(CType(e.Row,dtAcessoriosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtAcessoriosRowChangingEvent) Is Nothing) Then
                RaiseEvent dtAcessoriosRowChanging(Me, New dtAcessoriosRowChangeEvent(CType(e.Row,dtAcessoriosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtAcessoriosRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtAcessoriosRowDeleted(Me, New dtAcessoriosRowChangeEvent(CType(e.Row,dtAcessoriosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtAcessoriosRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtAcessoriosRowDeleting(Me, New dtAcessoriosRowChangeEvent(CType(e.Row,dtAcessoriosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovedtAcessoriosRow(ByVal row As dtAcessoriosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsListagens = New dsListagens()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtAcessoriosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtListaFichasRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtListaFichas As dtListaFichasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtListaFichas = CType(Me.Table,dtListaFichasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SerieID() As String
            Get
                Return CType(Me(Me.tabledtListaFichas.SerieIDColumn),String)
            End Get
            Set
                Me(Me.tabledtListaFichas.SerieIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModeloID() As String
            Get
                Return CType(Me(Me.tabledtListaFichas.ModeloIDColumn),String)
            End Get
            Set
                Me(Me.tabledtListaFichas.ModeloIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CorID() As String
            Get
                Return CType(Me(Me.tabledtListaFichas.CorIDColumn),String)
            End Get
            Set
                Me(Me.tabledtListaFichas.CorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TamID() As String
            Get
                Return CType(Me(Me.tabledtListaFichas.TamIDColumn),String)
            End Get
            Set
                Me(Me.tabledtListaFichas.TamIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModCorDescr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListaFichas.ModCorDescrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ModCorDescr' na tabela 'dtListaFichas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListaFichas.ModCorDescrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PrecoEtiqueta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtListaFichas.PrecoEtiquetaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'PrecoEtiqueta' na tabela 'dtListaFichas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListaFichas.PrecoEtiquetaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DescrLinha() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListaFichas.DescrLinhaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DescrLinha' na tabela 'dtListaFichas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListaFichas.DescrLinhaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Obs() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListaFichas.ObsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Obs' na tabela 'dtListaFichas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListaFichas.ObsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Foto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListaFichas.FotoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Foto' na tabela 'dtListaFichas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListaFichas.FotoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsModCorDescrNull() As Boolean
            Return Me.IsNull(Me.tabledtListaFichas.ModCorDescrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetModCorDescrNull()
            Me(Me.tabledtListaFichas.ModCorDescrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPrecoEtiquetaNull() As Boolean
            Return Me.IsNull(Me.tabledtListaFichas.PrecoEtiquetaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPrecoEtiquetaNull()
            Me(Me.tabledtListaFichas.PrecoEtiquetaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDescrLinhaNull() As Boolean
            Return Me.IsNull(Me.tabledtListaFichas.DescrLinhaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDescrLinhaNull()
            Me(Me.tabledtListaFichas.DescrLinhaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsObsNull() As Boolean
            Return Me.IsNull(Me.tabledtListaFichas.ObsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetObsNull()
            Me(Me.tabledtListaFichas.ObsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFotoNull() As Boolean
            Return Me.IsNull(Me.tabledtListaFichas.FotoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFotoNull()
            Me(Me.tabledtListaFichas.FotoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtDocPosRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtDocPos As dtDocPosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtDocPos = CType(Me.Table,dtDocPosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Via() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.ViaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Via' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.ViaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CodEmp() As String
            Get
                Return CType(Me(Me.tabledtDocPos.CodEmpColumn),String)
            End Get
            Set
                Me(Me.tabledtDocPos.CodEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpNome() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpNomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpNome' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpNomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpDesigna() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpDesignaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpDesigna' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpDesignaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpMorada() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpMoradaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpMorada' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpMoradaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpCodPostal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpCodPostalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpCodPostal' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpCodPostalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpLocalidade() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpLocalidadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpLocalidade' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpLocalidadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpTelefone() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpTelefoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpTelefone' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpTelefoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpFax() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpFaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpFax' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpFaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpContrib() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpContribColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpContrib' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpContribColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpCapSocial() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpCapSocialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpCapSocial' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpCapSocialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpNrRegisto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpNrRegistoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpNrRegisto' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpNrRegistoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpLogo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpLogoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpLogo' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpLogoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpMarca() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.EmpMarcaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpMarca' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.EmpMarcaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocNrSerie() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DocNrSerieColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DocNrSerie' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DocNrSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocNr() As String
            Get
                Return CType(Me(Me.tabledtDocPos.DocNrColumn),String)
            End Get
            Set
                Me(Me.tabledtDocPos.DocNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DataDoc() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DataDocColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DataDoc' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DataDocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Obs() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.ObsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Obs' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.ObsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DescontoDoc() As Decimal
            Get
                Return CType(Me(Me.tabledtDocPos.DescontoDocColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtDocPos.DescontoDocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocOrig() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DocOrigColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DocOrig' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DocOrigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Hash4d() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.Hash4dColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Hash4d' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.Hash4dColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DestCod() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DestCodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DestCod' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DestCodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DestDescr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DestDescrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DestDescr' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DestDescrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DestEndereco() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DestEnderecoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DestEndereco' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DestEnderecoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DestCodPostal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DestCodPostalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DestCodPostal' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DestCodPostalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DestLocal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DestLocalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DestLocal' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DestLocalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DestNIF() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DestNIFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DestNIF' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DestNIFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ModeloID() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.ModeloIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ModeloID' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.ModeloIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CorID() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.CorIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CorID' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.CorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Unidade() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.UnidadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Unidade' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.UnidadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Descricao() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.DescricaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Descricao' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.DescricaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Valor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.ValorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Valor' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.ValorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VlrDescLn() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.VlrDescLnColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VlrDescLn' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.VlrDescLnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LocalCarga() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.LocalCargaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LocalCarga' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.LocalCargaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HoraCarga() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.HoraCargaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'HoraCarga' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.HoraCargaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LocDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.LocDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LocDesc' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.LocDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Qtd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.QtdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Qtd' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.QtdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.VIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VIva' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.VIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LNome() As String
            Get
                Return CType(Me(Me.tabledtDocPos.LNomeColumn),String)
            End Get
            Set
                Me(Me.tabledtDocPos.LNomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LMorada() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.LMoradaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LMorada' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.LMoradaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LCodPostal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.LCodPostalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LCodPostal' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.LCodPostalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LLocalidade() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.LLocalidadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LLocalidade' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.LLocalidadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LTelefone() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.LTelefoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LTelefone' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.LTelefoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LSite() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.LSiteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LSite' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.LSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TxIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.TxIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'TxIVA' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.TxIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ProductCode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtDocPos.ProductCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ProductCode' na tabela 'dtDocPos' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtDocPos.ProductCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsViaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.ViaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetViaNull()
            Me(Me.tabledtDocPos.ViaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpNomeNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpNomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpNomeNull()
            Me(Me.tabledtDocPos.EmpNomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpDesignaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpDesignaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpDesignaNull()
            Me(Me.tabledtDocPos.EmpDesignaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpMoradaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpMoradaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpMoradaNull()
            Me(Me.tabledtDocPos.EmpMoradaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpCodPostalNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpCodPostalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpCodPostalNull()
            Me(Me.tabledtDocPos.EmpCodPostalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpLocalidadeNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpLocalidadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpLocalidadeNull()
            Me(Me.tabledtDocPos.EmpLocalidadeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpTelefoneNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpTelefoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpTelefoneNull()
            Me(Me.tabledtDocPos.EmpTelefoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpFaxNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpFaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpFaxNull()
            Me(Me.tabledtDocPos.EmpFaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpContribNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpContribColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpContribNull()
            Me(Me.tabledtDocPos.EmpContribColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpCapSocialNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpCapSocialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpCapSocialNull()
            Me(Me.tabledtDocPos.EmpCapSocialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpNrRegistoNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpNrRegistoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpNrRegistoNull()
            Me(Me.tabledtDocPos.EmpNrRegistoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpLogoNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpLogoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpLogoNull()
            Me(Me.tabledtDocPos.EmpLogoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpMarcaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.EmpMarcaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpMarcaNull()
            Me(Me.tabledtDocPos.EmpMarcaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocNrSerieNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DocNrSerieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocNrSerieNull()
            Me(Me.tabledtDocPos.DocNrSerieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDataDocNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DataDocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDataDocNull()
            Me(Me.tabledtDocPos.DataDocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsObsNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.ObsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetObsNull()
            Me(Me.tabledtDocPos.ObsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocOrigNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DocOrigColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocOrigNull()
            Me(Me.tabledtDocPos.DocOrigColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHash4dNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.Hash4dColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHash4dNull()
            Me(Me.tabledtDocPos.Hash4dColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDestCodNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DestCodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDestCodNull()
            Me(Me.tabledtDocPos.DestCodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDestDescrNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DestDescrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDestDescrNull()
            Me(Me.tabledtDocPos.DestDescrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDestEnderecoNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DestEnderecoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDestEnderecoNull()
            Me(Me.tabledtDocPos.DestEnderecoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDestCodPostalNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DestCodPostalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDestCodPostalNull()
            Me(Me.tabledtDocPos.DestCodPostalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDestLocalNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DestLocalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDestLocalNull()
            Me(Me.tabledtDocPos.DestLocalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDestNIFNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DestNIFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDestNIFNull()
            Me(Me.tabledtDocPos.DestNIFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsModeloIDNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.ModeloIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetModeloIDNull()
            Me(Me.tabledtDocPos.ModeloIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCorIDNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.CorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCorIDNull()
            Me(Me.tabledtDocPos.CorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUnidadeNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.UnidadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUnidadeNull()
            Me(Me.tabledtDocPos.UnidadeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDescricaoNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.DescricaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDescricaoNull()
            Me(Me.tabledtDocPos.DescricaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsValorNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.ValorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetValorNull()
            Me(Me.tabledtDocPos.ValorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVlrDescLnNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.VlrDescLnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVlrDescLnNull()
            Me(Me.tabledtDocPos.VlrDescLnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLocalCargaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.LocalCargaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLocalCargaNull()
            Me(Me.tabledtDocPos.LocalCargaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHoraCargaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.HoraCargaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHoraCargaNull()
            Me(Me.tabledtDocPos.HoraCargaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLocDescNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.LocDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLocDescNull()
            Me(Me.tabledtDocPos.LocDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQtdNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.QtdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQtdNull()
            Me(Me.tabledtDocPos.QtdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.VIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVIvaNull()
            Me(Me.tabledtDocPos.VIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLMoradaNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.LMoradaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLMoradaNull()
            Me(Me.tabledtDocPos.LMoradaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLCodPostalNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.LCodPostalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLCodPostalNull()
            Me(Me.tabledtDocPos.LCodPostalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLLocalidadeNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.LLocalidadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLLocalidadeNull()
            Me(Me.tabledtDocPos.LLocalidadeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLTelefoneNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.LTelefoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLTelefoneNull()
            Me(Me.tabledtDocPos.LTelefoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLSiteNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.LSiteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLSiteNull()
            Me(Me.tabledtDocPos.LSiteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTxIVANull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.TxIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTxIVANull()
            Me(Me.tabledtDocPos.TxIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsProductCodeNull() As Boolean
            Return Me.IsNull(Me.tabledtDocPos.ProductCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetProductCodeNull()
            Me(Me.tabledtDocPos.ProductCodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ClientesLojaRow
        Inherits Global.System.Data.DataRow
        
        Private tableClientesLoja As ClientesLojaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableClientesLoja = CType(Me.Table,ClientesLojaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClienteLojaID() As Integer
            Get
                Return CType(Me(Me.tableClientesLoja.ClienteLojaIDColumn),Integer)
            End Get
            Set
                Me(Me.tableClientesLoja.ClienteLojaIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.NomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Nome' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.NomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Morada() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.MoradaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Morada' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.MoradaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Localidade() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.LocalidadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Localidade' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.LocalidadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CodPostal() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.CodPostalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CodPostal' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.CodPostalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NIF() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.NIFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'NIF' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.NIFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BI() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.BIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BI' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.BIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Telefone() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.TelefoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Telefone' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.TelefoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Telemovel() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.TelemovelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Telemovel' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.TelemovelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Email() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.EmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Email' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.EmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Obs() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.ObsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Obs' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.ObsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OperadorID() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.OperadorIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OperadorID' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.OperadorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DtRegisto() As Date
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.DtRegistoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DtRegisto' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.DtRegistoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PaisID() As String
            Get
                Return CType(Me(Me.tableClientesLoja.PaisIDColumn),String)
            End Get
            Set
                Me(Me.tableClientesLoja.PaisIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DistritoID() As Integer
            Get
                Return CType(Me(Me.tableClientesLoja.DistritoIDColumn),Integer)
            End Get
            Set
                Me(Me.tableClientesLoja.DistritoIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArmOrig() As String
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.ArmOrigColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ArmOrig' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.ArmOrigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property IDClienteLoja() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableClientesLoja.IDClienteLojaColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'IDClienteLoja' na tabela 'ClientesLoja' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClientesLoja.IDClienteLojaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNomeNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.NomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNomeNull()
            Me(Me.tableClientesLoja.NomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMoradaNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.MoradaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMoradaNull()
            Me(Me.tableClientesLoja.MoradaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLocalidadeNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.LocalidadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLocalidadeNull()
            Me(Me.tableClientesLoja.LocalidadeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCodPostalNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.CodPostalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCodPostalNull()
            Me(Me.tableClientesLoja.CodPostalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNIFNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.NIFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNIFNull()
            Me(Me.tableClientesLoja.NIFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBINull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.BIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBINull()
            Me(Me.tableClientesLoja.BIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTelefoneNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.TelefoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTelefoneNull()
            Me(Me.tableClientesLoja.TelefoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTelemovelNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.TelemovelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTelemovelNull()
            Me(Me.tableClientesLoja.TelemovelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmailNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.EmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmailNull()
            Me(Me.tableClientesLoja.EmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsObsNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.ObsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetObsNull()
            Me(Me.tableClientesLoja.ObsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOperadorIDNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.OperadorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOperadorIDNull()
            Me(Me.tableClientesLoja.OperadorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDtRegistoNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.DtRegistoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDtRegistoNull()
            Me(Me.tableClientesLoja.DtRegistoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArmOrigNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.ArmOrigColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArmOrigNull()
            Me(Me.tableClientesLoja.ArmOrigColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsIDClienteLojaNull() As Boolean
            Return Me.IsNull(Me.tableClientesLoja.IDClienteLojaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetIDClienteLojaNull()
            Me(Me.tableClientesLoja.IDClienteLojaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtMapaVendasRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtMapaVendas As dtMapaVendasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtMapaVendas = CType(Me.Table,dtMapaVendasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArmazemID() As String
            Get
                Return CType(Me(Me.tabledtMapaVendas.ArmazemIDColumn),String)
            End Get
            Set
                Me(Me.tabledtMapaVendas.ArmazemIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArmAbrev() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.ArmAbrevColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ArmAbrev' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.ArmAbrevColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Deposito() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.DepositoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Deposito' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.DepositoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DepSap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.DepSapColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DepSap' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.DepSapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CustoSIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.CustoSIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CustoSIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.CustoSIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QtdSapatos() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.QtdSapatosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'QtdSapatos' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.QtdSapatosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QtdMalas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.QtdMalasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'QtdMalas' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.QtdMalasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ReceberMalas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.ReceberMalasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ReceberMalas' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.ReceberMalasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property IvaMalas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.IvaMalasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'IvaMalas' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.IvaMalasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VndTotaisCIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.VndTotaisCIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VndTotaisCIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.VndTotaisCIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VndSapatosSIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.VndSapatosSIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VndSapatosSIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.VndSapatosSIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DepSapatosSIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.DepSapatosSIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DepSapatosSIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.DepSapatosSIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VndMalasSIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.VndMalasSIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VndMalasSIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.VndMalasSIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ValorIvaMalas3020() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.ValorIvaMalas3020Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ValorIvaMalas3020' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.ValorIvaMalas3020Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DepMalas3020SIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.DepMalas3020SIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DepMalas3020SIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.DepMalas3020SIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VndSapatosCIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.VndSapatosCIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VndSapatosCIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.VndSapatosCIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VndMalasCIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.VndMalasCIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VndMalasCIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.VndMalasCIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DepMalasCIva3020() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.DepMalasCIva3020Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DepMalasCIva3020' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.DepMalasCIva3020Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DepMalas20CIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.DepMalas20CIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DepMalas20CIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.DepMalas20CIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DepMalas30CIva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.DepMalas30CIvaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DepMalas30CIva' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.DepMalas30CIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QtdMalas20() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.QtdMalas20Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'QtdMalas20' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.QtdMalas20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VndMalas30CIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.VndMalas30CIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VndMalas30CIVA' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.VndMalas30CIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VndMalas20CIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtMapaVendas.VndMalas20CIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VndMalas20CIVA' na tabela 'dtMapaVendas' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMapaVendas.VndMalas20CIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsArmAbrevNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.ArmAbrevColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetArmAbrevNull()
            Me(Me.tabledtMapaVendas.ArmAbrevColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepositoNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.DepositoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepositoNull()
            Me(Me.tabledtMapaVendas.DepositoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepSapNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.DepSapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepSapNull()
            Me(Me.tabledtMapaVendas.DepSapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCustoSIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.CustoSIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCustoSIvaNull()
            Me(Me.tabledtMapaVendas.CustoSIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQtdSapatosNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.QtdSapatosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQtdSapatosNull()
            Me(Me.tabledtMapaVendas.QtdSapatosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQtdMalasNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.QtdMalasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQtdMalasNull()
            Me(Me.tabledtMapaVendas.QtdMalasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsReceberMalasNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.ReceberMalasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetReceberMalasNull()
            Me(Me.tabledtMapaVendas.ReceberMalasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsIvaMalasNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.IvaMalasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetIvaMalasNull()
            Me(Me.tabledtMapaVendas.IvaMalasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVndTotaisCIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.VndTotaisCIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVndTotaisCIvaNull()
            Me(Me.tabledtMapaVendas.VndTotaisCIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVndSapatosSIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.VndSapatosSIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVndSapatosSIvaNull()
            Me(Me.tabledtMapaVendas.VndSapatosSIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepSapatosSIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.DepSapatosSIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepSapatosSIvaNull()
            Me(Me.tabledtMapaVendas.DepSapatosSIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVndMalasSIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.VndMalasSIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVndMalasSIvaNull()
            Me(Me.tabledtMapaVendas.VndMalasSIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsValorIvaMalas3020Null() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.ValorIvaMalas3020Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetValorIvaMalas3020Null()
            Me(Me.tabledtMapaVendas.ValorIvaMalas3020Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepMalas3020SIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.DepMalas3020SIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepMalas3020SIvaNull()
            Me(Me.tabledtMapaVendas.DepMalas3020SIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVndSapatosCIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.VndSapatosCIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVndSapatosCIvaNull()
            Me(Me.tabledtMapaVendas.VndSapatosCIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVndMalasCIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.VndMalasCIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVndMalasCIvaNull()
            Me(Me.tabledtMapaVendas.VndMalasCIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepMalasCIva3020Null() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.DepMalasCIva3020Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepMalasCIva3020Null()
            Me(Me.tabledtMapaVendas.DepMalasCIva3020Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepMalas20CIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.DepMalas20CIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepMalas20CIvaNull()
            Me(Me.tabledtMapaVendas.DepMalas20CIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepMalas30CIvaNull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.DepMalas30CIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepMalas30CIvaNull()
            Me(Me.tabledtMapaVendas.DepMalas30CIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQtdMalas20Null() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.QtdMalas20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQtdMalas20Null()
            Me(Me.tabledtMapaVendas.QtdMalas20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVndMalas30CIVANull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.VndMalas30CIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVndMalas30CIVANull()
            Me(Me.tabledtMapaVendas.VndMalas30CIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVndMalas20CIVANull() As Boolean
            Return Me.IsNull(Me.tabledtMapaVendas.VndMalas20CIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVndMalas20CIVANull()
            Me(Me.tabledtMapaVendas.VndMalas20CIVAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtVndDetalheRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtVndDetalhe As dtVndDetalheDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtVndDetalhe = CType(Me.Table,dtVndDetalheDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpresaID() As String
            Get
                Return CType(Me(Me.tabledtVndDetalhe.EmpresaIDColumn),String)
            End Get
            Set
                Me(Me.tabledtVndDetalhe.EmpresaIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ArmazemID() As String
            Get
                Return CType(Me(Me.tabledtVndDetalhe.ArmazemIDColumn),String)
            End Get
            Set
                Me(Me.tabledtVndDetalhe.ArmazemIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TipoDocID() As String
            Get
                Return CType(Me(Me.tabledtVndDetalhe.TipoDocIDColumn),String)
            End Get
            Set
                Me(Me.tabledtVndDetalhe.TipoDocIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NomeEmpresa() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.NomeEmpresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'NomeEmpresa' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.NomeEmpresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MoradaEmpresa() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.MoradaEmpresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'MoradaEmpresa' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.MoradaEmpresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CodigoPostal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.CodigoPostalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CodigoPostal' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.CodigoPostalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EmpContrib() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.EmpContribColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EmpContrib' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.EmpContribColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Loja() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.LojaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Loja' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.LojaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Morada() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.MoradaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Morada' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.MoradaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Localidade() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.LocalidadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Localidade' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.LocalidadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NIF() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.NIFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'NIF' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.NIFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CodPostal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.CodPostalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CodPostal' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.CodPostalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocNr() As String
            Get
                Return CType(Me(Me.tabledtVndDetalhe.DocNrColumn),String)
            End Get
            Set
                Me(Me.tabledtVndDetalhe.DocNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DataDoc() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.DataDocColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DataDoc' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.DataDocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FormaPagtoID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.FormaPagtoIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'FormaPagtoID' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.FormaPagtoIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Liquido() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.LiquidoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Liquido' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.LiquidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property IVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.IVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'IVA' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.IVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Total' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Desconto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.DescontoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Desconto' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.DescontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QtdTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.QtdTotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'QtdTotal' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.QtdTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SinalMovStk() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.SinalMovStkColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SinalMovStk' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.SinalMovStkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TipoDocDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtVndDetalhe.TipoDocDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'TipoDocDesc' na tabela 'dtVndDetalhe' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtVndDetalhe.TipoDocDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNomeEmpresaNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.NomeEmpresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNomeEmpresaNull()
            Me(Me.tabledtVndDetalhe.NomeEmpresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMoradaEmpresaNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.MoradaEmpresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMoradaEmpresaNull()
            Me(Me.tabledtVndDetalhe.MoradaEmpresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCodigoPostalNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.CodigoPostalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCodigoPostalNull()
            Me(Me.tabledtVndDetalhe.CodigoPostalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEmpContribNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.EmpContribColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEmpContribNull()
            Me(Me.tabledtVndDetalhe.EmpContribColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLojaNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.LojaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLojaNull()
            Me(Me.tabledtVndDetalhe.LojaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMoradaNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.MoradaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMoradaNull()
            Me(Me.tabledtVndDetalhe.MoradaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLocalidadeNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.LocalidadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLocalidadeNull()
            Me(Me.tabledtVndDetalhe.LocalidadeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNIFNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.NIFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNIFNull()
            Me(Me.tabledtVndDetalhe.NIFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCodPostalNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.CodPostalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCodPostalNull()
            Me(Me.tabledtVndDetalhe.CodPostalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDataDocNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.DataDocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDataDocNull()
            Me(Me.tabledtVndDetalhe.DataDocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFormaPagtoIDNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.FormaPagtoIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFormaPagtoIDNull()
            Me(Me.tabledtVndDetalhe.FormaPagtoIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLiquidoNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.LiquidoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLiquidoNull()
            Me(Me.tabledtVndDetalhe.LiquidoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsIVANull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.IVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetIVANull()
            Me(Me.tabledtVndDetalhe.IVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tabledtVndDetalhe.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDescontoNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.DescontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDescontoNull()
            Me(Me.tabledtVndDetalhe.DescontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQtdTotalNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.QtdTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQtdTotalNull()
            Me(Me.tabledtVndDetalhe.QtdTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSinalMovStkNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.SinalMovStkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSinalMovStkNull()
            Me(Me.tabledtVndDetalhe.SinalMovStkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTipoDocDescNull() As Boolean
            Return Me.IsNull(Me.tabledtVndDetalhe.TipoDocDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTipoDocDescNull()
            Me(Me.tabledtVndDetalhe.TipoDocDescColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtAcessoriosRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtAcessorios As dtAcessoriosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtAcessorios = CType(Me.Table,dtAcessoriosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Loja() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.LojaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Loja' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.LojaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TipoDocID() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.TipoDocIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'TipoDocID' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.TipoDocIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocNr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.DocNrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DocNr' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.DocNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DataDoc() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.DataDocColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DataDoc' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.DataDocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SerieID() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.SerieIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SerieID' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.SerieIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Valor() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.ValorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Valor' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.ValorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Qtd() As Short
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.QtdColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Qtd' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.QtdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Obs() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.ObsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Obs' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.ObsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Deposito() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtAcessorios.DepositoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Deposito' na tabela 'dtAcessorios' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAcessorios.DepositoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLojaNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.LojaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLojaNull()
            Me(Me.tabledtAcessorios.LojaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTipoDocIDNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.TipoDocIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTipoDocIDNull()
            Me(Me.tabledtAcessorios.TipoDocIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocNrNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.DocNrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocNrNull()
            Me(Me.tabledtAcessorios.DocNrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDataDocNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.DataDocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDataDocNull()
            Me(Me.tabledtAcessorios.DataDocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSerieIDNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.SerieIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSerieIDNull()
            Me(Me.tabledtAcessorios.SerieIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsValorNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.ValorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetValorNull()
            Me(Me.tabledtAcessorios.ValorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQtdNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.QtdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQtdNull()
            Me(Me.tabledtAcessorios.QtdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsObsNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.ObsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetObsNull()
            Me(Me.tabledtAcessorios.ObsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDepositoNull() As Boolean
            Return Me.IsNull(Me.tabledtAcessorios.DepositoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDepositoNull()
            Me(Me.tabledtAcessorios.DepositoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class dtListaFichasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtListaFichasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As dtListaFichasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As dtListaFichasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class dtDocPosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtDocPosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As dtDocPosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As dtDocPosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class ClientesLojaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ClientesLojaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As ClientesLojaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As ClientesLojaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class dtMapaVendasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtMapaVendasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As dtMapaVendasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As dtMapaVendasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class dtVndDetalheRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtVndDetalheRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As dtVndDetalheRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As dtVndDetalheRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class dtAcessoriosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtAcessoriosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As dtAcessoriosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As dtAcessoriosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsListagensTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtListaFichasTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtListaFichas"
            tableMapping.ColumnMappings.Add("SerieID", "SerieID")
            tableMapping.ColumnMappings.Add("ModeloID", "ModeloID")
            tableMapping.ColumnMappings.Add("CorID", "CorID")
            tableMapping.ColumnMappings.Add("TamID", "TamID")
            tableMapping.ColumnMappings.Add("ModCorDescr", "ModCorDescr")
            tableMapping.ColumnMappings.Add("PrecoEtiqueta", "PrecoEtiqueta")
            tableMapping.ColumnMappings.Add("DescrLinha", "DescrLinha")
            tableMapping.ColumnMappings.Add("Obs", "Obs")
            tableMapping.ColumnMappings.Add("Foto", "Foto")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = sconnectionstring
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Serie.SerieID, Serie.ModeloID, Serie.CorID, Serie.TamID, ModeloCor.Mod"& _ 
                "CorDescr, Serie.PrecoEtiqueta, Linhas.DescrLinha, Serie.Obs, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     'file:C:\Girl\Fotos\' + Serie.ModeloID + Serie.CorID + '.jpg' AS Foto"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "         Serie INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Modelos ON Serie.ModeloID = Mod"& _ 
                "elos.ModeloID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ModeloCor ON Serie.ModeloID = Mo"& _ 
                "deloCor.ModeloID AND Serie.CorID = ModeloCor.CorID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     Linhas ON Modelos.LinhaID = Linhas.LinhaID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsListagens.dtListaFichasDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsListagens.dtListaFichasDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsListagens.dtListaFichasDataTable = New dsListagens.dtListaFichasDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtDocPosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtDocPos"
            tableMapping.ColumnMappings.Add("Via", "Via")
            tableMapping.ColumnMappings.Add("CodEmp", "CodEmp")
            tableMapping.ColumnMappings.Add("EmpNome", "EmpNome")
            tableMapping.ColumnMappings.Add("EmpDesigna", "EmpDesigna")
            tableMapping.ColumnMappings.Add("EmpMorada", "EmpMorada")
            tableMapping.ColumnMappings.Add("EmpCodPostal", "EmpCodPostal")
            tableMapping.ColumnMappings.Add("EmpLocalidade", "EmpLocalidade")
            tableMapping.ColumnMappings.Add("EmpTelefone", "EmpTelefone")
            tableMapping.ColumnMappings.Add("EmpFax", "EmpFax")
            tableMapping.ColumnMappings.Add("EmpContrib", "EmpContrib")
            tableMapping.ColumnMappings.Add("EmpCapSocial", "EmpCapSocial")
            tableMapping.ColumnMappings.Add("EmpNrRegisto", "EmpNrRegisto")
            tableMapping.ColumnMappings.Add("EmpLogo", "EmpLogo")
            tableMapping.ColumnMappings.Add("EmpMarca", "EmpMarca")
            tableMapping.ColumnMappings.Add("DocNrSerie", "DocNrSerie")
            tableMapping.ColumnMappings.Add("DocNr", "DocNr")
            tableMapping.ColumnMappings.Add("DataDoc", "DataDoc")
            tableMapping.ColumnMappings.Add("Obs", "Obs")
            tableMapping.ColumnMappings.Add("DescontoDoc", "DescontoDoc")
            tableMapping.ColumnMappings.Add("DocOrig", "DocOrig")
            tableMapping.ColumnMappings.Add("Hash4d", "Hash4d")
            tableMapping.ColumnMappings.Add("DestCod", "DestCod")
            tableMapping.ColumnMappings.Add("DestDescr", "DestDescr")
            tableMapping.ColumnMappings.Add("DestEndereco", "DestEndereco")
            tableMapping.ColumnMappings.Add("DestCodPostal", "DestCodPostal")
            tableMapping.ColumnMappings.Add("DestLocal", "DestLocal")
            tableMapping.ColumnMappings.Add("DestNIF", "DestNIF")
            tableMapping.ColumnMappings.Add("ModeloID", "ModeloID")
            tableMapping.ColumnMappings.Add("CorID", "CorID")
            tableMapping.ColumnMappings.Add("Unidade", "Unidade")
            tableMapping.ColumnMappings.Add("Descricao", "Descricao")
            tableMapping.ColumnMappings.Add("Valor", "Valor")
            tableMapping.ColumnMappings.Add("VlrDescLn", "VlrDescLn")
            tableMapping.ColumnMappings.Add("LocalCarga", "LocalCarga")
            tableMapping.ColumnMappings.Add("HoraCarga", "HoraCarga")
            tableMapping.ColumnMappings.Add("LocDesc", "LocDesc")
            tableMapping.ColumnMappings.Add("Qtd", "Qtd")
            tableMapping.ColumnMappings.Add("VIva", "VIva")
            tableMapping.ColumnMappings.Add("LNome", "LNome")
            tableMapping.ColumnMappings.Add("LMorada", "LMorada")
            tableMapping.ColumnMappings.Add("LCodPostal", "LCodPostal")
            tableMapping.ColumnMappings.Add("LLocalidade", "LLocalidade")
            tableMapping.ColumnMappings.Add("LTelefone", "LTelefone")
            tableMapping.ColumnMappings.Add("LSite", "LSite")
            tableMapping.ColumnMappings.Add("TxIVA", "TxIVA")
            tableMapping.ColumnMappings.Add("ProductCode", "ProductCode")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = sconnectionstring
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT 'Original' AS Via, DocCab.EmpresaID AS CodEmp, Empresas.EmpNome, Empresas."& _ 
                "EmpDesigna, Empresas.EmpMorada, Empresas.EmpCodPostal, Empresas.EmpLocalidade, E"& _ 
                "mpresas.EmpTelefone, Empresas.EmpFax, Empresas.EmpContrib, Empresas.EmpCapSocial"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             Empresas.EmpNrRegisto, Empresas.EmpLogo, Empresas.EmpMarca, Doc"& _ 
                "Cab.TipoDocID + ' ' + LEFT(DocCab.DocNr, 2) + RIGHT(DocCab.ArmazemID, 2) + '/' +"& _ 
                " RIGHT(DocCab.DocNr, 5) AS DocNrSerie, DocCab.DocNr, DocCab.DataDoc, DocCab.Obs,"& _ 
                " DocCab.DescontoDoc, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             DocCab.DocOrig, DocCab.Hash4d, DocCab.TercID"& _ 
                " AS DestCod, Destino.Nome AS DestDescr, Destino.Morada AS DestEndereco, Destino."& _ 
                "CodPostal AS DestCodPostal, Destino.Localidade AS DestLocal, Destino.NIF AS Dest"& _ 
                "NIF, DocDet.ModeloID, DocDet.CorID, DocDet.Unidade, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             DocDet.Descri"& _ 
                "cao, DocDet.Valor, DocDet.VlrDescLn, DocCab.LocalCarga, DocCab.HoraCarga, DocCab"& _ 
                ".LocDesc, CAST(ROUND(SUM(DocDet.Qtd), 2) AS NUMERIC(36, 0)) AS Qtd, DocDet.VlrIV"& _ 
                "A AS VIva, Terceiros.NomeAbrev AS LNome, Terceiros.Morada AS LMorada, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "     Terceiros.CodPostal AS LCodPostal, Terceiros.Localidade AS LLocalidade, Ter"& _ 
                "ceiros.Telefone AS LTelefone, Terceiros.Site AS LSite, TaxIVA.TxIVA, DocDet.Prod"& _ 
                "uctCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   Empresas INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             DocCab ON Empresas.EmpresaID ="& _ 
                " DocCab.EmpresaID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             DocDet ON DocCab.EmpresaID = DocDet.E"& _ 
                "mpresaID AND DocCab.ArmazemID = DocDet.ArmazemID AND DocCab.TipoDocID = DocDet.T"& _ 
                "ipoDocID AND DocCab.DocNr = DocDet.DocNr INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             ClientesLoja A"& _ 
                "S Destino ON DocCab.TercID = Destino.ClienteLojaID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             Arma"& _ 
                "zens ON DocCab.ArmazemID = Armazens.ArmazemID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             Terceiros"& _ 
                " ON Armazens.TercID = Terceiros.TercID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             TaxIVA ON DocDet"& _ 
                ".IvaID = TaxIVA.IvaID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (DocCab.EmpresaID = '0001') AND (DocCab.ArmazemID ="& _ 
                " @Armz) AND (DocCab.TipoDocID = @TipoDoc) AND (DocCab.DocNr = @DocNr)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY "& _ 
                "DocCab.EmpresaID, Empresas.EmpNome, Empresas.EmpDesigna, Empresas.EmpMorada, Emp"& _ 
                "resas.EmpCodPostal, Empresas.EmpLocalidade, Empresas.EmpTelefone, Empresas.EmpFa"& _ 
                "x, Empresas.EmpContrib, Empresas.EmpCapSocial, Empresas.EmpNrRegisto, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "     Empresas.EmpLogo, Empresas.EmpMarca, DocCab.TipoDocID, DocCab.DocNr, DocCab"& _ 
                ".DataDoc, DocCab.Obs, DocCab.DescontoDoc, DocCab.DocOrig, DocCab.Hash4d, DocCab."& _ 
                "ArmazemID, DocCab.TercID, Destino.Nome, Destino.Morada, Destino.CodPostal, Desti"& _ 
                "no.Localidade, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             Destino.NIF, DocDet.ModeloID, DocDet.CorID, DocDet"& _ 
                ".Unidade, DocDet.Descricao, DocDet.Valor, DocDet.VlrDescLn, DocCab.LocalCarga, D"& _ 
                "ocCab.HoraCarga, DocCab.LocDesc, DocDet.VlrIVA, Terceiros.Morada, Terceiros.CodP"& _ 
                "ostal, Terceiros.Localidade, Terceiros.Telefone, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             Terceiros.Site, "& _ 
                "Terceiros.NomeAbrev, TaxIVA.TxIVA, DocDet.ProductCode"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Armz", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ArmazemID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoDoc", Global.System.Data.SqlDbType.VarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoDocID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocNr", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DocNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsListagens.dtDocPosDataTable, ByVal Armz As String, ByVal TipoDoc As String, ByVal DocNr As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Armz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Armz")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Armz,String)
            End If
            If (TipoDoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TipoDoc")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TipoDoc,String)
            End If
            If (DocNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DocNr")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DocNr,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Armz As String, ByVal TipoDoc As String, ByVal DocNr As String) As dsListagens.dtDocPosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Armz Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Armz")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Armz,String)
            End If
            If (TipoDoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TipoDoc")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TipoDoc,String)
            End If
            If (DocNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DocNr")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DocNr,String)
            End If
            Dim dataTable As dsListagens.dtDocPosDataTable = New dsListagens.dtDocPosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ClientesLojaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ClientesLoja"
            tableMapping.ColumnMappings.Add("ClienteLojaID", "ClienteLojaID")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Morada", "Morada")
            tableMapping.ColumnMappings.Add("Localidade", "Localidade")
            tableMapping.ColumnMappings.Add("CodPostal", "CodPostal")
            tableMapping.ColumnMappings.Add("NIF", "NIF")
            tableMapping.ColumnMappings.Add("BI", "BI")
            tableMapping.ColumnMappings.Add("Telefone", "Telefone")
            tableMapping.ColumnMappings.Add("Telemovel", "Telemovel")
            tableMapping.ColumnMappings.Add("Email", "Email")
            tableMapping.ColumnMappings.Add("Obs", "Obs")
            tableMapping.ColumnMappings.Add("OperadorID", "OperadorID")
            tableMapping.ColumnMappings.Add("DtRegisto", "DtRegisto")
            tableMapping.ColumnMappings.Add("PaisID", "PaisID")
            tableMapping.ColumnMappings.Add("DistritoID", "DistritoID")
            tableMapping.ColumnMappings.Add("ArmOrig", "ArmOrig")
            tableMapping.ColumnMappings.Add("IDClienteLoja", "IDClienteLoja")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ClientesLoja] WHERE (([ClienteLojaID] = @Original_ClienteLojaID) AND"& _ 
                " ((@IsNull_Nome = 1 AND [Nome] IS NULL) OR ([Nome] = @Original_Nome)) AND ((@IsN"& _ 
                "ull_Morada = 1 AND [Morada] IS NULL) OR ([Morada] = @Original_Morada)) AND ((@Is"& _ 
                "Null_Localidade = 1 AND [Localidade] IS NULL) OR ([Localidade] = @Original_Local"& _ 
                "idade)) AND ((@IsNull_CodPostal = 1 AND [CodPostal] IS NULL) OR ([CodPostal] = @"& _ 
                "Original_CodPostal)) AND ((@IsNull_NIF = 1 AND [NIF] IS NULL) OR ([NIF] = @Origi"& _ 
                "nal_NIF)) AND ((@IsNull_BI = 1 AND [BI] IS NULL) OR ([BI] = @Original_BI)) AND ("& _ 
                "(@IsNull_Telefone = 1 AND [Telefone] IS NULL) OR ([Telefone] = @Original_Telefon"& _ 
                "e)) AND ((@IsNull_Telemovel = 1 AND [Telemovel] IS NULL) OR ([Telemovel] = @Orig"& _ 
                "inal_Telemovel)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Ori"& _ 
                "ginal_Email)) AND ((@IsNull_Obs = 1 AND [Obs] IS NULL) OR ([Obs] = @Original_Obs"& _ 
                ")) AND ((@IsNull_OperadorID = 1 AND [OperadorID] IS NULL) OR ([OperadorID] = @Or"& _ 
                "iginal_OperadorID)) AND ((@IsNull_DtRegisto = 1 AND [DtRegisto] IS NULL) OR ([Dt"& _ 
                "Registo] = @Original_DtRegisto)) AND ([PaisID] = @Original_PaisID) AND ([Distrit"& _ 
                "oID] = @Original_DistritoID) AND ((@IsNull_ArmOrig = 1 AND [ArmOrig] IS NULL) OR"& _ 
                " ([ArmOrig] = @Original_ArmOrig)) AND ((@IsNull_IDClienteLoja = 1 AND [IDCliente"& _ 
                "Loja] IS NULL) OR ([IDClienteLoja] = @Original_IDClienteLoja)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClienteLojaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClienteLojaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nome", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nome", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Morada", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Morada", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Morada", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Morada", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Localidade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Localidade", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Localidade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Localidade", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CodPostal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodPostal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodPostal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodPostal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telefone", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefone", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telefone", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefone", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telemovel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telemovel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telemovel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telemovel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Email", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Email", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Email", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Email", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obs", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperadorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperadorID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperadorID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperadorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DtRegisto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DtRegisto", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DtRegisto", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DtRegisto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaisID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaisID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DistritoID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DistritoID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ArmOrig", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArmOrig", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ArmOrig", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArmOrig", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDClienteLoja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDClienteLoja", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDClienteLoja", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDClienteLoja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ClientesLoja] ([Nome], [Morada], [Localidade], [CodPostal], [NIF], ["& _ 
                "BI], [Telefone], [Telemovel], [Email], [Obs], [OperadorID], [DtRegisto], [PaisID"& _ 
                "], [DistritoID], [ArmOrig], [IDClienteLoja]) VALUES (@Nome, @Morada, @Localidade"& _ 
                ", @CodPostal, @NIF, @BI, @Telefone, @Telemovel, @Email, @Obs, @OperadorID, @DtRe"& _ 
                "gisto, @PaisID, @DistritoID, @ArmOrig, @IDClienteLoja);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ClienteLojaID, N"& _ 
                "ome, Morada, Localidade, CodPostal, NIF, BI, Telefone, Telemovel, Email, Obs, Op"& _ 
                "eradorID, DtRegisto, PaisID, DistritoID, ArmOrig, IDClienteLoja FROM ClientesLoj"& _ 
                "a WHERE (ClienteLojaID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Morada", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Morada", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Localidade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Localidade", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodPostal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodPostal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telefone", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefone", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telemovel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telemovel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Email", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Email", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obs", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperadorID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperadorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DtRegisto", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DtRegisto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaisID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaisID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DistritoID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DistritoID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArmOrig", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArmOrig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDClienteLoja", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDClienteLoja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ClientesLoja] SET [Nome] = @Nome, [Morada] = @Morada, [Localidade] = @Loc"& _ 
                "alidade, [CodPostal] = @CodPostal, [NIF] = @NIF, [BI] = @BI, [Telefone] = @Telef"& _ 
                "one, [Telemovel] = @Telemovel, [Email] = @Email, [Obs] = @Obs, [OperadorID] = @O"& _ 
                "peradorID, [DtRegisto] = @DtRegisto, [PaisID] = @PaisID, [DistritoID] = @Distrit"& _ 
                "oID, [ArmOrig] = @ArmOrig, [IDClienteLoja] = @IDClienteLoja WHERE (([ClienteLoja"& _ 
                "ID] = @Original_ClienteLojaID) AND ((@IsNull_Nome = 1 AND [Nome] IS NULL) OR ([N"& _ 
                "ome] = @Original_Nome)) AND ((@IsNull_Morada = 1 AND [Morada] IS NULL) OR ([Mora"& _ 
                "da] = @Original_Morada)) AND ((@IsNull_Localidade = 1 AND [Localidade] IS NULL) "& _ 
                "OR ([Localidade] = @Original_Localidade)) AND ((@IsNull_CodPostal = 1 AND [CodPo"& _ 
                "stal] IS NULL) OR ([CodPostal] = @Original_CodPostal)) AND ((@IsNull_NIF = 1 AND"& _ 
                " [NIF] IS NULL) OR ([NIF] = @Original_NIF)) AND ((@IsNull_BI = 1 AND [BI] IS NUL"& _ 
                "L) OR ([BI] = @Original_BI)) AND ((@IsNull_Telefone = 1 AND [Telefone] IS NULL) "& _ 
                "OR ([Telefone] = @Original_Telefone)) AND ((@IsNull_Telemovel = 1 AND [Telemovel"& _ 
                "] IS NULL) OR ([Telemovel] = @Original_Telemovel)) AND ((@IsNull_Email = 1 AND ["& _ 
                "Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@IsNull_Obs = 1 AND [Obs] "& _ 
                "IS NULL) OR ([Obs] = @Original_Obs)) AND ((@IsNull_OperadorID = 1 AND [OperadorI"& _ 
                "D] IS NULL) OR ([OperadorID] = @Original_OperadorID)) AND ((@IsNull_DtRegisto = "& _ 
                "1 AND [DtRegisto] IS NULL) OR ([DtRegisto] = @Original_DtRegisto)) AND ([PaisID]"& _ 
                " = @Original_PaisID) AND ([DistritoID] = @Original_DistritoID) AND ((@IsNull_Arm"& _ 
                "Orig = 1 AND [ArmOrig] IS NULL) OR ([ArmOrig] = @Original_ArmOrig)) AND ((@IsNul"& _ 
                "l_IDClienteLoja = 1 AND [IDClienteLoja] IS NULL) OR ([IDClienteLoja] = @Original"& _ 
                "_IDClienteLoja)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ClienteLojaID, Nome, Morada, Localidade, CodPostal, N"& _ 
                "IF, BI, Telefone, Telemovel, Email, Obs, OperadorID, DtRegisto, PaisID, Distrito"& _ 
                "ID, ArmOrig, IDClienteLoja FROM ClientesLoja WHERE (ClienteLojaID = @ClienteLoja"& _ 
                "ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Morada", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Morada", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Localidade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Localidade", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodPostal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodPostal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telefone", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefone", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telemovel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telemovel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Email", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Email", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obs", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperadorID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperadorID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DtRegisto", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DtRegisto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaisID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaisID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DistritoID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DistritoID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArmOrig", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArmOrig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDClienteLoja", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDClienteLoja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClienteLojaID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClienteLojaID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nome", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nome", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Morada", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Morada", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Morada", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Morada", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Localidade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Localidade", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Localidade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Localidade", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CodPostal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodPostal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodPostal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodPostal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telefone", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefone", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telefone", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefone", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telemovel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telemovel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telemovel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telemovel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Email", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Email", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Email", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Email", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obs", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperadorID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperadorID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperadorID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperadorID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DtRegisto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DtRegisto", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DtRegisto", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DtRegisto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaisID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaisID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DistritoID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DistritoID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ArmOrig", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArmOrig", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ArmOrig", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArmOrig", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDClienteLoja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDClienteLoja", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDClienteLoja", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDClienteLoja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClienteLojaID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ClienteLojaID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = sconnectionstring
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ClientesLoja.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   ClientesLoja"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsListagens.ClientesLojaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsListagens.ClientesLojaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsListagens.ClientesLojaDataTable = New dsListagens.ClientesLojaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsListagens.ClientesLojaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsListagens) As Integer
            Return Me.Adapter.Update(dataSet, "ClientesLoja")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ClienteLojaID As Integer,  _
                    ByVal Original_Nome As String,  _
                    ByVal Original_Morada As String,  _
                    ByVal Original_Localidade As String,  _
                    ByVal Original_CodPostal As String,  _
                    ByVal Original_NIF As String,  _
                    ByVal Original_BI As String,  _
                    ByVal Original_Telefone As String,  _
                    ByVal Original_Telemovel As String,  _
                    ByVal Original_Email As String,  _
                    ByVal Original_Obs As String,  _
                    ByVal Original_OperadorID As String,  _
                    ByVal Original_DtRegisto As Global.System.Nullable(Of Date),  _
                    ByVal Original_PaisID As String,  _
                    ByVal Original_DistritoID As Integer,  _
                    ByVal Original_ArmOrig As String,  _
                    ByVal Original_IDClienteLoja As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ClienteLojaID,Integer)
            If (Original_Nome Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Nome,String)
            End If
            If (Original_Morada Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Morada,String)
            End If
            If (Original_Localidade Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Localidade,String)
            End If
            If (Original_CodPostal Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CodPostal,String)
            End If
            If (Original_NIF Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NIF,String)
            End If
            If (Original_BI Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_BI,String)
            End If
            If (Original_Telefone Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Telefone,String)
            End If
            If (Original_Telemovel Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Telemovel,String)
            End If
            If (Original_Email Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Email,String)
            End If
            If (Original_Obs Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Obs,String)
            End If
            If (Original_OperadorID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_OperadorID,String)
            End If
            If (Original_DtRegisto.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DtRegisto.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_PaisID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PaisID")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_PaisID,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_DistritoID,Integer)
            If (Original_ArmOrig Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_ArmOrig,String)
            End If
            If (Original_IDClienteLoja.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_IDClienteLoja.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Nome As String,  _
                    ByVal Morada As String,  _
                    ByVal Localidade As String,  _
                    ByVal CodPostal As String,  _
                    ByVal NIF As String,  _
                    ByVal BI As String,  _
                    ByVal Telefone As String,  _
                    ByVal Telemovel As String,  _
                    ByVal Email As String,  _
                    ByVal Obs As String,  _
                    ByVal OperadorID As String,  _
                    ByVal DtRegisto As Global.System.Nullable(Of Date),  _
                    ByVal PaisID As String,  _
                    ByVal DistritoID As Integer,  _
                    ByVal ArmOrig As String,  _
                    ByVal IDClienteLoja As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Nome Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Nome,String)
            End If
            If (Morada Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Morada,String)
            End If
            If (Localidade Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Localidade,String)
            End If
            If (CodPostal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CodPostal,String)
            End If
            If (NIF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NIF,String)
            End If
            If (BI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(BI,String)
            End If
            If (Telefone Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Telefone,String)
            End If
            If (Telemovel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Telemovel,String)
            End If
            If (Email Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Email,String)
            End If
            If (Obs Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Obs,String)
            End If
            If (OperadorID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(OperadorID,String)
            End If
            If (DtRegisto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DtRegisto.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PaisID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PaisID")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PaisID,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(DistritoID,Integer)
            If (ArmOrig Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ArmOrig,String)
            End If
            If (IDClienteLoja.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(IDClienteLoja.Value,System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Nome As String,  _
                    ByVal Morada As String,  _
                    ByVal Localidade As String,  _
                    ByVal CodPostal As String,  _
                    ByVal NIF As String,  _
                    ByVal BI As String,  _
                    ByVal Telefone As String,  _
                    ByVal Telemovel As String,  _
                    ByVal Email As String,  _
                    ByVal Obs As String,  _
                    ByVal OperadorID As String,  _
                    ByVal DtRegisto As Global.System.Nullable(Of Date),  _
                    ByVal PaisID As String,  _
                    ByVal DistritoID As Integer,  _
                    ByVal ArmOrig As String,  _
                    ByVal IDClienteLoja As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal Original_ClienteLojaID As Integer,  _
                    ByVal Original_Nome As String,  _
                    ByVal Original_Morada As String,  _
                    ByVal Original_Localidade As String,  _
                    ByVal Original_CodPostal As String,  _
                    ByVal Original_NIF As String,  _
                    ByVal Original_BI As String,  _
                    ByVal Original_Telefone As String,  _
                    ByVal Original_Telemovel As String,  _
                    ByVal Original_Email As String,  _
                    ByVal Original_Obs As String,  _
                    ByVal Original_OperadorID As String,  _
                    ByVal Original_DtRegisto As Global.System.Nullable(Of Date),  _
                    ByVal Original_PaisID As String,  _
                    ByVal Original_DistritoID As Integer,  _
                    ByVal Original_ArmOrig As String,  _
                    ByVal Original_IDClienteLoja As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal ClienteLojaID As Integer) As Integer
            If (Nome Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Nome,String)
            End If
            If (Morada Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Morada,String)
            End If
            If (Localidade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Localidade,String)
            End If
            If (CodPostal Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CodPostal,String)
            End If
            If (NIF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NIF,String)
            End If
            If (BI Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(BI,String)
            End If
            If (Telefone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Telefone,String)
            End If
            If (Telemovel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Telemovel,String)
            End If
            If (Email Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Email,String)
            End If
            If (Obs Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Obs,String)
            End If
            If (OperadorID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(OperadorID,String)
            End If
            If (DtRegisto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DtRegisto.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PaisID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PaisID")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PaisID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(DistritoID,Integer)
            If (ArmOrig Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ArmOrig,String)
            End If
            If (IDClienteLoja.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(IDClienteLoja.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ClienteLojaID,Integer)
            If (Original_Nome Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_Nome,String)
            End If
            If (Original_Morada Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Morada,String)
            End If
            If (Original_Localidade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_Localidade,String)
            End If
            If (Original_CodPostal Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CodPostal,String)
            End If
            If (Original_NIF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_NIF,String)
            End If
            If (Original_BI Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_BI,String)
            End If
            If (Original_Telefone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_Telefone,String)
            End If
            If (Original_Telemovel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Telemovel,String)
            End If
            If (Original_Email Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Email,String)
            End If
            If (Original_Obs Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Obs,String)
            End If
            If (Original_OperadorID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_OperadorID,String)
            End If
            If (Original_DtRegisto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_DtRegisto.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_PaisID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PaisID")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_PaisID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_DistritoID,Integer)
            If (Original_ArmOrig Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_ArmOrig,String)
            End If
            If (Original_IDClienteLoja.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_IDClienteLoja.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(ClienteLojaID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Nome As String,  _
                    ByVal Morada As String,  _
                    ByVal Localidade As String,  _
                    ByVal CodPostal As String,  _
                    ByVal NIF As String,  _
                    ByVal BI As String,  _
                    ByVal Telefone As String,  _
                    ByVal Telemovel As String,  _
                    ByVal Email As String,  _
                    ByVal Obs As String,  _
                    ByVal OperadorID As String,  _
                    ByVal DtRegisto As Global.System.Nullable(Of Date),  _
                    ByVal PaisID As String,  _
                    ByVal DistritoID As Integer,  _
                    ByVal ArmOrig As String,  _
                    ByVal IDClienteLoja As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal Original_ClienteLojaID As Integer,  _
                    ByVal Original_Nome As String,  _
                    ByVal Original_Morada As String,  _
                    ByVal Original_Localidade As String,  _
                    ByVal Original_CodPostal As String,  _
                    ByVal Original_NIF As String,  _
                    ByVal Original_BI As String,  _
                    ByVal Original_Telefone As String,  _
                    ByVal Original_Telemovel As String,  _
                    ByVal Original_Email As String,  _
                    ByVal Original_Obs As String,  _
                    ByVal Original_OperadorID As String,  _
                    ByVal Original_DtRegisto As Global.System.Nullable(Of Date),  _
                    ByVal Original_PaisID As String,  _
                    ByVal Original_DistritoID As Integer,  _
                    ByVal Original_ArmOrig As String,  _
                    ByVal Original_IDClienteLoja As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Return Me.Update(Nome, Morada, Localidade, CodPostal, NIF, BI, Telefone, Telemovel, Email, Obs, OperadorID, DtRegisto, PaisID, DistritoID, ArmOrig, IDClienteLoja, Original_ClienteLojaID, Original_Nome, Original_Morada, Original_Localidade, Original_CodPostal, Original_NIF, Original_BI, Original_Telefone, Original_Telemovel, Original_Email, Original_Obs, Original_OperadorID, Original_DtRegisto, Original_PaisID, Original_DistritoID, Original_ArmOrig, Original_IDClienteLoja, Original_ClienteLojaID)
        End Function
    End Class
End Namespace
